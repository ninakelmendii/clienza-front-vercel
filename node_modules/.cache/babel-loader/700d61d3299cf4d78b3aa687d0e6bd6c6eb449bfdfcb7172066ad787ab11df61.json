{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PeopleTable from \"./PeopleTable.vue\";\nimport axios from \"axios\";\nimport SnackBar from \"@/components/Snackbar/SnackBar.vue\";\nimport * as LANGUAGE from '../../../store/language.json';\nexport default {\n  data() {\n    return {\n      snackbar: {\n        show: false,\n        message: null,\n        error: false\n      },\n      lead_status_data: [],\n      date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      menu: false,\n      activePicker: null,\n      edit_mode: false,\n      people_data: {\n        first_name: \"\",\n        last_name: \"\",\n        investment: \"\",\n        date_of_birth: \"\",\n        kvg_id: '',\n        vvg_id: '',\n        price: \"\",\n        franchise_id: ''\n      },\n      get_people_data: [],\n      franchisesList: [],\n      insurances_list: [],\n      edit_people_id: 0\n    };\n  },\n  watch: {\n    menu(val) {\n      val && setTimeout(() => this.activePicker = \"YEAR\");\n    }\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    moneyFormat(value) {\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n    saveDate(date) {\n      this.$refs.menu.save(date);\n    },\n    getInsurances() {\n      axios.get(\"/insurances\").then(response => {\n        for (let $i = 0; response.data.data.length > 0; $i++) {\n          this.insurances_list.push({\n            text: response.data.data[$i].name,\n            value: response.data.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getLeadStatuses() {\n      axios.get(\"/leadstatus\").then(response => {\n        for (let $i = 0; response.data.length > 0; $i++) {\n          this.lead_status_data.push({\n            text: response.data[$i].en,\n            value: response.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getPeople(people_id) {\n      console.log(this.$router.currentRoute.params.client_id);\n      let url = \"lead/people/\";\n      if (this.$router.currentRoute.params.client_id != undefined) {\n        url = \"customer_people/\";\n      }\n      axios.get(url + people_id).then(response => {\n        this.people_data = {};\n        this.get_people_data.push(response.data.data);\n        this.people_data.first_name = response.data.data.first_name;\n        this.people_data.last_name = response.data.data.last_name;\n        this.people_data.investment = parseInt(response.data.data.investment);\n        this.people_data.date_of_birth = response.data.data.date_of_birth;\n        this.people_data.kvg_id = parseInt(response.data.data.kvg_id);\n        this.people_data.vvg_id = parseInt(response.data.data.vvg_id);\n        this.people_data.franchise_id = parseInt(response.data.data.franchise_id);\n        this.people_data.price = response.data.data.price;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    insertPeople() {\n      this.people_data.lead_id = this.$router.currentRoute.params.id;\n      if (this.$router.currentRoute.params.id == undefined) {\n        this.people_data.lead_id = this.$router.currentRoute.params.client_id;\n        const current_data = {\n          customer_id: this.$router.currentRoute.params.client_id,\n          first_name: this.people_data.first_name,\n          last_name: this.people_data.last_name,\n          date_of_birth: this.people_data.date_of_birth,\n          franchise_id: this.people_data.franchise_id,\n          investment: this.people_data.investment,\n          kvg_id: this.people_data.kvg_id,\n          vvg_id: this.people_data.vvg_id,\n          price: this.people_data.price\n        };\n        axios.post('customer_people', current_data).then(response => {\n          console.log(response.data);\n          this.$refs.peopleTable.getItemsTable();\n          this.people_data = {\n            first_name: \"\",\n            last_name: \"\",\n            investment: \"\",\n            date_of_birth: \"\",\n            kvg_id: '',\n            vvg_id: '',\n            price: \"\",\n            franchise_id: ''\n          };\n          this.openSnackBar(\"Data saved successfully\");\n        }).catch(() => {\n          this.openSnackBar(\"Fill in all fields\", true);\n        });\n        return;\n      }\n      axios.post(\"lead/people\", this.people_data).then(response => {\n        console.log(response.data);\n        this.people_data = {};\n        this.openSnackBar(\"Data saved successfully\");\n        this.$refs.peopleTable.getItemsTable();\n      }).catch(() => {\n        // this.snackbar = {\n        //   message: error.response.data.message,\n        //   color: \"error\",\n        //   show: true,\n        // };\n\n        this.openSnackBar(\"Fill in all fields\", true);\n      });\n    },\n    openSnackBar(message = \"\", error = false) {\n      this.snackbar = {\n        message,\n        error\n      };\n      this.$refs.snackbar.toggleSnackbar(true);\n    },\n    editPeople() {\n      this.people_data.lead_id = this.$router.currentRoute.params.id;\n      let current_data = false;\n      let url = \"lead/people/\";\n      if (this.$router.currentRoute.params.client_id != undefined) {\n        current_data = {\n          customer_id: this.$router.currentRoute.params.client_id,\n          first_name: this.people_data.first_name,\n          last_name: this.people_data.last_name,\n          date_of_birth: this.people_data.date_of_birth,\n          franchise_id: this.people_data.franchise_id,\n          investment: this.people_data.investment,\n          kvg_id: this.people_data.kvg_id,\n          vvg_id: this.people_data.vvg_id,\n          price: this.people_data.price\n        };\n        url = \"customer_people/\";\n      }\n      axios.patch(url + this.edit_people_id, current_data || this.people_data).then(() => {\n        this.openSnackBar(\"Data saved successfully\");\n        this.$refs.peopleTable.getItemsTable();\n      }).catch(() => {\n        this.openSnackBar(\"Fill in all fields\", true);\n      });\n    },\n    editPeopleEmitter(mode, people_id) {\n      this.edit_mode = mode;\n      if (mode === false) {\n        this.people_data = {};\n      }\n      this.edit_people_id = people_id;\n      this.getPeople(people_id);\n    },\n    getFranchises() {\n      axios.get(\"franchises\").then(response => {\n        for (let $i = 0; response.data.data.length > 0; $i++) {\n          this.franchisesList.push({\n            text: response.data.data[$i].label,\n            value: response.data.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  mounted() {\n    this.getLeadStatuses();\n    this.getFranchises();\n    this.getInsurances();\n  },\n  components: {\n    PeopleTable,\n    SnackBar\n  },\n  computed: {\n    formated_date() {\n      if (!this.people_data.date_of_birth) return null;\n      const [year, month, day] = this.people_data.date_of_birth.split('-');\n      return `${day}.${month}.${year}`;\n    }\n  }\n};","map":{"version":3,"names":["PeopleTable","axios","SnackBar","LANGUAGE","data","snackbar","show","message","error","lead_status_data","date","Date","now","getTimezoneOffset","toISOString","substr","menu","activePicker","edit_mode","people_data","first_name","last_name","investment","date_of_birth","kvg_id","vvg_id","price","franchise_id","get_people_data","franchisesList","insurances_list","edit_people_id","watch","val","setTimeout","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","moneyFormat","value","toFixed","replace","toString","saveDate","$refs","save","getInsurances","get","then","response","$i","length","push","text","name","id","catch","console","log","getLeadStatuses","en","getPeople","people_id","$router","currentRoute","params","client_id","url","undefined","parseInt","insertPeople","lead_id","current_data","customer_id","post","peopleTable","getItemsTable","openSnackBar","toggleSnackbar","editPeople","patch","editPeopleEmitter","mode","getFranchises","label","mounted","components","computed","formated_date","year","month","day","split"],"sources":["src/components/Leads/LeadDetails/PeopleTab.vue"],"sourcesContent":["<template>\r\n  <v-row>\r\n    <h4 style=\"padding: 12px\">\r\n      {{ translate('Add family member') }}\r\n    </h4>\r\n    <!-- <v-snackbar :color=\"snackbar.color\" timeout=\"2000\" v-model=\"snackbar.show\">\r\n      {{ snackbar.message }}\r\n      <template v-slot:action=\"{ attrs }\">\r\n        <v-btn text v-bind=\"attrs\" @click=\"snackbar = false\"> Close </v-btn>\r\n      </template>\r\n    </v-snackbar> -->\r\n    <SnackBar :data=\"snackbar\" ref=\"snackbar\" />\r\n    <v-container>\r\n      <v-card class=\"people-card pa-3\">\r\n        <v-container>\r\n          <v-row>\r\n            <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"11\" lg=\"11\">\r\n              <v-row class=\"mt-3\">\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-text-field\r\n                    v-model=\"people_data.first_name\"\r\n                    filled\r\n                    ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                    :label=\"translate('First Name')\"\r\n                  ></v-text-field>\r\n                </v-col>\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-text-field\r\n                    v-model=\"people_data.last_name\"\r\n                    filled\r\n                    ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                    :label=\"translate('Last Name')\"\r\n                  ></v-text-field>\r\n                </v-col>\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-select\r\n                      filled\r\n                      v-model=\"people_data.investment\"\r\n                      :items=\"insurances_list\"\r\n                      ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                      :label=\"translate('Actual Insurance')\"\r\n                  ></v-select>\r\n                </v-col>\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-menu\r\n                    ref=\"menu\"\r\n                    v-model=\"menu\"\r\n                    :close-on-content-click=\"false\"\r\n                    :return-value.sync=\"date\"\r\n                    transition=\"scale-transition\"\r\n                    offset-y\r\n                    min-width=\"auto\"\r\n                  >\r\n                    <template v-slot:activator=\"{ on, attrs }\">\r\n                      <v-text-field\r\n                        ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                        filled\r\n                        v-model=\"formated_date\"\r\n                        :label=\"translate('Date')\"\r\n                        readonly\r\n                        v-bind=\"attrs\"\r\n                        v-on=\"on\"\r\n                        append-icon=\"mdi-calendar\"\r\n                      ></v-text-field>\r\n                    </template>\r\n                    <v-date-picker\r\n                      v-model=\"people_data.date_of_birth\"\r\n                      no-title\r\n                      scrollable\r\n                    >\r\n                      <v-spacer></v-spacer>\r\n                      <v-btn text color=\"primary\" @click=\"menu = false\">\r\n                        Cancel\r\n                      </v-btn>\r\n                      <v-btn\r\n                        text\r\n                        color=\"primary\"\r\n                        @click=\"$refs.menu.save(date)\"\r\n                      >\r\n                        OK\r\n                      </v-btn>\r\n                    </v-date-picker>\r\n                  </v-menu>\r\n                </v-col>\r\n\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-select\r\n                    filled\r\n                    v-model=\"people_data.franchise_id\"\r\n                    :items=\"franchisesList\"\r\n                    ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                    label=\"Franchise\"\r\n                  ></v-select>\r\n                </v-col>\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-select\r\n                      filled\r\n                      v-model=\"people_data.kvg_id\"\r\n                      :items=\"insurances_list\"\r\n                      ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                      label=\"KVG\"\r\n                  ></v-select>\r\n                </v-col>\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-select\r\n                      filled\r\n                      v-model=\"people_data.vvg_id\"\r\n                      :items=\"insurances_list\"\r\n                      ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                      label=\"VVG\"\r\n                  ></v-select>\r\n                </v-col>\r\n                <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\r\n                  <v-text-field\r\n                    v-model=\"people_data.price\"\r\n                    filled\r\n                    type=\"number\"\r\n                    ::background-color=\"$vuetify.theme.dark ? '' :  '#fff'\"\r\n                    :label=\"translate('Price')\"\r\n                  ></v-text-field>\r\n                </v-col>\r\n              </v-row>\r\n            </v-col>\r\n\r\n            <v-col\r\n              cols=\"12\"\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"1\"\r\n              lg=\"1\"\r\n              class=\"d-flex justify-center align-center\"\r\n            >\r\n              <v-btn\r\n                v-show=\"!edit_mode\"\r\n                color=\"#fff\"\r\n                class=\"add-btn\"\r\n                icon\r\n                @click=\"insertPeople\"\r\n              >\r\n                <v-icon>mdi-plus</v-icon>\r\n              </v-btn>\r\n\r\n              <v-btn\r\n                v-show=\"edit_mode\"\r\n                color=\"#fff\"\r\n                class=\"add-btn\"\r\n                icon\r\n                @click=\"editPeople\"\r\n              >\r\n                <v-icon>mdi-pencil</v-icon>\r\n              </v-btn>\r\n\r\n              <v-btn\r\n                v-show=\"edit_mode\"\r\n                color=\"#fff\"\r\n                class=\"add-btn\"\r\n                icon\r\n                @click=\"editPeopleEmitter(false)\"\r\n              >\r\n                <v-icon>mdi-cancel</v-icon>\r\n              </v-btn>\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-card>\r\n\r\n      <PeopleTable ref=\"peopleTable\"  @editPeople=\"editPeopleEmitter\" />\r\n    </v-container>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport PeopleTable from \"./PeopleTable.vue\";\r\nimport axios from \"axios\";\r\nimport SnackBar from \"@/components/Snackbar/SnackBar.vue\";\r\nimport * as LANGUAGE from '../../../store/language.json';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      snackbar: {\r\n        show: false,\r\n        message: null,\r\n        error: false,\r\n      },\r\n      lead_status_data: [],\r\n\r\n      date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000)\r\n        .toISOString()\r\n        .substr(0, 10),\r\n      menu: false,\r\n      activePicker: null,\r\n\r\n      edit_mode: false,\r\n\r\n      people_data: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        investment: \"\",\r\n        date_of_birth: \"\",\r\n        kvg_id: '',\r\n        vvg_id: '',\r\n        price: \"\",\r\n        franchise_id: ''\r\n      },\r\n      get_people_data: [],\r\n\r\n      franchisesList: [],\r\n\r\n      insurances_list: [],\r\n\r\n      edit_people_id: 0\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    menu(val) {\r\n      val && setTimeout(() => (this.activePicker = \"YEAR\"));\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    moneyFormat(value) {\r\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\r\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    },\r\n\r\n    saveDate(date) {\r\n      this.$refs.menu.save(date);\r\n    },\r\n\r\n    getInsurances() {\r\n      axios\r\n          .get(\"/insurances\")\r\n          .then((response) => {\r\n            for (let $i = 0; response.data.data.length > 0; $i++) {\r\n              this.insurances_list.push({\r\n                text: response.data.data[$i].name,\r\n                value: response.data.data[$i].id,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    },\r\n\r\n    getLeadStatuses() {\r\n      axios\r\n        .get(\"/leadstatus\")\r\n        .then((response) => {\r\n          for (let $i = 0; response.data.length > 0; $i++) {\r\n            this.lead_status_data.push({\r\n              text: response.data[$i].en,\r\n              value: response.data[$i].id,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    getPeople(people_id) {\r\n      console.log(this.$router.currentRoute.params.client_id);\r\n\r\n      let url = \"lead/people/\";\r\n\r\n      if(this.$router.currentRoute.params.client_id != undefined) {\r\n        url = \"customer_people/\";\r\n      }\r\n\r\n      axios\r\n        .get(url + people_id)\r\n        .then((response) => {\r\n          this.people_data = {};\r\n          this.get_people_data.push(response.data.data);\r\n\r\n          this.people_data.first_name = response.data.data.first_name;\r\n          this.people_data.last_name = response.data.data.last_name;\r\n          this.people_data.investment = parseInt(response.data.data.investment);\r\n          this.people_data.date_of_birth = response.data.data.date_of_birth;\r\n          this.people_data.kvg_id = parseInt(response.data.data.kvg_id);\r\n          this.people_data.vvg_id = parseInt(response.data.data.vvg_id);\r\n          this.people_data.franchise_id = parseInt(response.data.data.franchise_id);\r\n          this.people_data.price = response.data.data.price;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    insertPeople() {\r\n      this.people_data.lead_id = this.$router.currentRoute.params.id;\r\n      \r\n      if(this.$router.currentRoute.params.id == undefined) {\r\n        this.people_data.lead_id = this.$router.currentRoute.params.client_id;\r\n\r\n        const current_data = {\r\n          customer_id: this.$router.currentRoute.params.client_id,\r\n          first_name: this.people_data.first_name,\r\n          last_name: this.people_data.last_name,\r\n          date_of_birth: this.people_data.date_of_birth,\r\n          franchise_id: this.people_data.franchise_id,\r\n          investment: this.people_data.investment,\r\n          kvg_id: this.people_data.kvg_id,\r\n          vvg_id: this.people_data.vvg_id,\r\n          price: this.people_data.price,\r\n        };\r\n\r\n        axios\r\n             .post('customer_people', current_data)\r\n             .then(response => {\r\n               console.log(response.data)\r\n               this.$refs.peopleTable.getItemsTable();\r\n               this.people_data = {\r\n                 first_name: \"\",\r\n                 last_name: \"\",\r\n                 investment: \"\",\r\n                 date_of_birth: \"\",\r\n                 kvg_id: '',\r\n                 vvg_id: '',\r\n                 price: \"\",\r\n                 franchise_id: ''\r\n               };\r\n\r\n               this.openSnackBar(\"Data saved successfully\");\r\n             })\r\n             .catch(() => {\r\n              this.openSnackBar(\"Fill in all fields\", true);\r\n             });\r\n\r\n        return;\r\n      }\r\n\r\n      axios\r\n        .post(\"lead/people\", this.people_data)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n\r\n          this.people_data = {};\r\n          \r\n          this.openSnackBar(\"Data saved successfully\");\r\n\r\n          this.$refs.peopleTable.getItemsTable();\r\n        })\r\n        .catch(() => {\r\n          // this.snackbar = {\r\n          //   message: error.response.data.message,\r\n          //   color: \"error\",\r\n          //   show: true,\r\n          // };\r\n\r\n          this.openSnackBar(\"Fill in all fields\", true);\r\n        });\r\n    },\r\n\r\n    openSnackBar(message = \"\", error = false) {\r\n      this.snackbar = {\r\n        message,\r\n        error\r\n      }\r\n\r\n      this.$refs.snackbar.toggleSnackbar(true);\r\n    },\r\n\r\n    editPeople() {\r\n      this.people_data.lead_id = this.$router.currentRoute.params.id;\r\n      \r\n      let current_data = false;\r\n      let url = \"lead/people/\";\r\n\r\n      if(this.$router.currentRoute.params.client_id != undefined) {\r\n        current_data = {\r\n          customer_id: this.$router.currentRoute.params.client_id,\r\n          first_name: this.people_data.first_name,\r\n          last_name: this.people_data.last_name,\r\n          date_of_birth: this.people_data.date_of_birth,\r\n          franchise_id: this.people_data.franchise_id,\r\n          investment: this.people_data.investment,\r\n          kvg_id: this.people_data.kvg_id,\r\n          vvg_id: this.people_data.vvg_id,\r\n          price: this.people_data.price,\r\n        };\r\n\r\n        url = \"customer_people/\"\r\n      }\r\n\r\n\r\n      axios\r\n        .patch(url + this.edit_people_id, current_data || this.people_data)\r\n        .then(() => {\r\n          this.openSnackBar(\"Data saved successfully\");\r\n\r\n          this.$refs.peopleTable.getItemsTable();\r\n        })\r\n        .catch(() => {\r\n          this.openSnackBar(\"Fill in all fields\", true);\r\n        });\r\n    },\r\n\r\n    editPeopleEmitter(mode, people_id) {\r\n      this.edit_mode = mode;\r\n      if (mode === false) {\r\n        this.people_data = {}\r\n      }\r\n      this.edit_people_id = people_id\r\n      this.getPeople(people_id);\r\n    },\r\n\r\n    getFranchises() {\r\n      axios\r\n        .get(\"franchises\")\r\n        .then((response) => {\r\n          for (let $i = 0; response.data.data.length > 0; $i++) {\r\n            this.franchisesList.push({\r\n              text: response.data.data[$i].label,\r\n              value: response.data.data[$i].id,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getLeadStatuses();\r\n    this.getFranchises();\r\n    this.getInsurances();\r\n  },\r\n  components: { PeopleTable, SnackBar },\r\n  computed: {\r\n    formated_date() {\r\n      if (!this.people_data.date_of_birth) return null\r\n\r\n      const [year, month, day] = this.people_data.date_of_birth.split('-')\r\n      return `${day}.${month}.${year}`\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.theme--light .v-card.people-card {\r\n  background: #ecf1f6 !important;\r\n  box-shadow: none;\r\n}\r\n\r\n.v-btn.add-btn {\r\n  background: #36a5dd;\r\n}\r\n</style>\r\n"],"mappings":";AA4KA,OAAAA,WAAA;AACA,OAAAC,KAAA;AACA,OAAAC,QAAA;AACA,YAAAC,QAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,IAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAC,gBAAA;MAEAC,IAAA,MAAAC,IAAA,CAAAA,IAAA,CAAAC,GAAA,SAAAD,IAAA,GAAAE,iBAAA,YACAC,WAAA,GACAC,MAAA;MACAC,IAAA;MACAC,YAAA;MAEAC,SAAA;MAEAC,WAAA;QACAC,UAAA;QACAC,SAAA;QACAC,UAAA;QACAC,aAAA;QACAC,MAAA;QACAC,MAAA;QACAC,KAAA;QACAC,YAAA;MACA;MACAC,eAAA;MAEAC,cAAA;MAEAC,eAAA;MAEAC,cAAA;IACA;EACA;EAEAC,KAAA;IACAhB,KAAAiB,GAAA;MACAA,GAAA,IAAAC,UAAA,YAAAjB,YAAA;IACA;EACA;EAEAkB,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAnC,QAAA,CAAAoC,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAA3C,QAAA,CAAAmC,SAAA,EAAAS,MAAA;MACA;QACA,OAAA5C,QAAA,CAAAmC,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,YAAAC,KAAA;MACA,IAAAhB,GAAA,IAAAgB,KAAA,MAAAC,OAAA,IAAAC,OAAA;MACA,OAAAlB,GAAA,CAAAmB,QAAA,GAAAD,OAAA;IACA;IAEAE,SAAA3C,IAAA;MACA,KAAA4C,KAAA,CAAAtC,IAAA,CAAAuC,IAAA,CAAA7C,IAAA;IACA;IAEA8C,cAAA;MACAvD,KAAA,CACAwD,GAAA,gBACAC,IAAA,CAAAC,QAAA;QACA,SAAAC,EAAA,MAAAD,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAyD,MAAA,MAAAD,EAAA;UACA,KAAA9B,eAAA,CAAAgC,IAAA;YACAC,IAAA,EAAAJ,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAwD,EAAA,EAAAI,IAAA;YACAf,KAAA,EAAAU,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAwD,EAAA,EAAAK;UACA;QACA;MACA,GACAC,KAAA,CAAA1D,KAAA;QACA2D,OAAA,CAAAC,GAAA,CAAA5D,KAAA;MACA;IACA;IAEA6D,gBAAA;MACApE,KAAA,CACAwD,GAAA,gBACAC,IAAA,CAAAC,QAAA;QACA,SAAAC,EAAA,MAAAD,QAAA,CAAAvD,IAAA,CAAAyD,MAAA,MAAAD,EAAA;UACA,KAAAnD,gBAAA,CAAAqD,IAAA;YACAC,IAAA,EAAAJ,QAAA,CAAAvD,IAAA,CAAAwD,EAAA,EAAAU,EAAA;YACArB,KAAA,EAAAU,QAAA,CAAAvD,IAAA,CAAAwD,EAAA,EAAAK;UACA;QACA;MACA,GACAC,KAAA,CAAA1D,KAAA;QACA2D,OAAA,CAAAC,GAAA,CAAA5D,KAAA;MACA;IACA;IAEA+D,UAAAC,SAAA;MACAL,OAAA,CAAAC,GAAA,MAAAK,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,SAAA;MAEA,IAAAC,GAAA;MAEA,SAAAJ,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,SAAA,IAAAE,SAAA;QACAD,GAAA;MACA;MAEA5E,KAAA,CACAwD,GAAA,CAAAoB,GAAA,GAAAL,SAAA,EACAd,IAAA,CAAAC,QAAA;QACA,KAAAxC,WAAA;QACA,KAAAS,eAAA,CAAAkC,IAAA,CAAAH,QAAA,CAAAvD,IAAA,CAAAA,IAAA;QAEA,KAAAe,WAAA,CAAAC,UAAA,GAAAuC,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAgB,UAAA;QACA,KAAAD,WAAA,CAAAE,SAAA,GAAAsC,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAiB,SAAA;QACA,KAAAF,WAAA,CAAAG,UAAA,GAAAyD,QAAA,CAAApB,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAkB,UAAA;QACA,KAAAH,WAAA,CAAAI,aAAA,GAAAoC,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAmB,aAAA;QACA,KAAAJ,WAAA,CAAAK,MAAA,GAAAuD,QAAA,CAAApB,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAoB,MAAA;QACA,KAAAL,WAAA,CAAAM,MAAA,GAAAsD,QAAA,CAAApB,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAqB,MAAA;QACA,KAAAN,WAAA,CAAAQ,YAAA,GAAAoD,QAAA,CAAApB,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAuB,YAAA;QACA,KAAAR,WAAA,CAAAO,KAAA,GAAAiC,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAsB,KAAA;MACA,GACAwC,KAAA,CAAA1D,KAAA;QACA2D,OAAA,CAAAC,GAAA,CAAA5D,KAAA;MACA;IACA;IAEAwE,aAAA;MACA,KAAA7D,WAAA,CAAA8D,OAAA,QAAAR,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAV,EAAA;MAEA,SAAAQ,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAV,EAAA,IAAAa,SAAA;QACA,KAAA3D,WAAA,CAAA8D,OAAA,QAAAR,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,SAAA;QAEA,MAAAM,YAAA;UACAC,WAAA,OAAAV,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,SAAA;UACAxD,UAAA,OAAAD,WAAA,CAAAC,UAAA;UACAC,SAAA,OAAAF,WAAA,CAAAE,SAAA;UACAE,aAAA,OAAAJ,WAAA,CAAAI,aAAA;UACAI,YAAA,OAAAR,WAAA,CAAAQ,YAAA;UACAL,UAAA,OAAAH,WAAA,CAAAG,UAAA;UACAE,MAAA,OAAAL,WAAA,CAAAK,MAAA;UACAC,MAAA,OAAAN,WAAA,CAAAM,MAAA;UACAC,KAAA,OAAAP,WAAA,CAAAO;QACA;QAEAzB,KAAA,CACAmF,IAAA,oBAAAF,YAAA,EACAxB,IAAA,CAAAC,QAAA;UACAQ,OAAA,CAAAC,GAAA,CAAAT,QAAA,CAAAvD,IAAA;UACA,KAAAkD,KAAA,CAAA+B,WAAA,CAAAC,aAAA;UACA,KAAAnE,WAAA;YACAC,UAAA;YACAC,SAAA;YACAC,UAAA;YACAC,aAAA;YACAC,MAAA;YACAC,MAAA;YACAC,KAAA;YACAC,YAAA;UACA;UAEA,KAAA4D,YAAA;QACA,GACArB,KAAA;UACA,KAAAqB,YAAA;QACA;QAEA;MACA;MAEAtF,KAAA,CACAmF,IAAA,qBAAAjE,WAAA,EACAuC,IAAA,CAAAC,QAAA;QACAQ,OAAA,CAAAC,GAAA,CAAAT,QAAA,CAAAvD,IAAA;QAEA,KAAAe,WAAA;QAEA,KAAAoE,YAAA;QAEA,KAAAjC,KAAA,CAAA+B,WAAA,CAAAC,aAAA;MACA,GACApB,KAAA;QACA;QACA;QACA;QACA;QACA;;QAEA,KAAAqB,YAAA;MACA;IACA;IAEAA,aAAAhF,OAAA,OAAAC,KAAA;MACA,KAAAH,QAAA;QACAE,OAAA;QACAC;MACA;MAEA,KAAA8C,KAAA,CAAAjD,QAAA,CAAAmF,cAAA;IACA;IAEAC,WAAA;MACA,KAAAtE,WAAA,CAAA8D,OAAA,QAAAR,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAV,EAAA;MAEA,IAAAiB,YAAA;MACA,IAAAL,GAAA;MAEA,SAAAJ,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,SAAA,IAAAE,SAAA;QACAI,YAAA;UACAC,WAAA,OAAAV,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,SAAA;UACAxD,UAAA,OAAAD,WAAA,CAAAC,UAAA;UACAC,SAAA,OAAAF,WAAA,CAAAE,SAAA;UACAE,aAAA,OAAAJ,WAAA,CAAAI,aAAA;UACAI,YAAA,OAAAR,WAAA,CAAAQ,YAAA;UACAL,UAAA,OAAAH,WAAA,CAAAG,UAAA;UACAE,MAAA,OAAAL,WAAA,CAAAK,MAAA;UACAC,MAAA,OAAAN,WAAA,CAAAM,MAAA;UACAC,KAAA,OAAAP,WAAA,CAAAO;QACA;QAEAmD,GAAA;MACA;MAGA5E,KAAA,CACAyF,KAAA,CAAAb,GAAA,QAAA9C,cAAA,EAAAmD,YAAA,SAAA/D,WAAA,EACAuC,IAAA;QACA,KAAA6B,YAAA;QAEA,KAAAjC,KAAA,CAAA+B,WAAA,CAAAC,aAAA;MACA,GACApB,KAAA;QACA,KAAAqB,YAAA;MACA;IACA;IAEAI,kBAAAC,IAAA,EAAApB,SAAA;MACA,KAAAtD,SAAA,GAAA0E,IAAA;MACA,IAAAA,IAAA;QACA,KAAAzE,WAAA;MACA;MACA,KAAAY,cAAA,GAAAyC,SAAA;MACA,KAAAD,SAAA,CAAAC,SAAA;IACA;IAEAqB,cAAA;MACA5F,KAAA,CACAwD,GAAA,eACAC,IAAA,CAAAC,QAAA;QACA,SAAAC,EAAA,MAAAD,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAyD,MAAA,MAAAD,EAAA;UACA,KAAA/B,cAAA,CAAAiC,IAAA;YACAC,IAAA,EAAAJ,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAwD,EAAA,EAAAkC,KAAA;YACA7C,KAAA,EAAAU,QAAA,CAAAvD,IAAA,CAAAA,IAAA,CAAAwD,EAAA,EAAAK;UACA;QACA;MACA,GACAC,KAAA,CAAA1D,KAAA;QACA2D,OAAA,CAAAC,GAAA,CAAA5D,KAAA;MACA;IACA;EACA;EACAuF,QAAA;IACA,KAAA1B,eAAA;IACA,KAAAwB,aAAA;IACA,KAAArC,aAAA;EACA;EACAwC,UAAA;IAAAhG,WAAA;IAAAE;EAAA;EACA+F,QAAA;IACAC,cAAA;MACA,UAAA/E,WAAA,CAAAI,aAAA;MAEA,OAAA4E,IAAA,EAAAC,KAAA,EAAAC,GAAA,SAAAlF,WAAA,CAAAI,aAAA,CAAA+E,KAAA;MACA,UAAAD,GAAA,IAAAD,KAAA,IAAAD,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}