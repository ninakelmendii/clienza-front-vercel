{"ast":null,"code":"import FileUploadService from \"./FileUploadService\";\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from \"@/components/Snackbar/SnackBar.vue\";\nexport default {\n  name: \"UploadFiles\",\n  data() {\n    return {\n      currentFile: undefined,\n      progress: 0,\n      snackbar: {\n        show: false,\n        message: null,\n        color: null\n      },\n      fileInfos: [],\n      category_id: 1,\n      customer_id: 1\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    selectFile(file) {\n      this.progress = 0;\n      this.currentFile = file;\n    },\n    uploadTaskAttachment() {\n      if (!this.currentFile) {\n        this.snackbar = {\n          message: \"Please select a file\",\n          error: true\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n        return;\n      }\n      this.snackbar = {\n        message: \"\",\n        color: \"\",\n        show: false,\n        error: false\n      };\n      this.$refs.snackbar.toggleSnackbar(false);\n      FileUploadService.uploadTaskAttachment(this.currentFile, event => {\n        this.progress = Math.round(100 * event.loaded / event.total);\n      }).then(response => {\n        this.snackbar = {\n          message: response.data.message,\n          error: true\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n        return FileUploadService.getFiles(this.$router.currentRoute.params);\n      }).then(files => {\n        this.fileInfos = files.data;\n      }).catch(error => {\n        this.progress = 0;\n        console.log(error);\n        this.currentFile = null;\n      });\n    }\n  },\n  mounted() {\n    FileUploadService.getFiles(this.$router.currentRoute.params).then(response => {\n      this.fileInfos = response.data;\n    });\n  },\n  components: {\n    SnackBar\n  }\n};","map":{"version":3,"names":["FileUploadService","LANGUAGE","SnackBar","name","data","currentFile","undefined","progress","snackbar","show","message","color","fileInfos","category_id","customer_id","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","selectFile","file","uploadTaskAttachment","error","$refs","toggleSnackbar","event","Math","round","loaded","total","then","response","getFiles","$router","currentRoute","params","files","catch","console","log","mounted","components"],"sources":["src/assets/services/UploadTaskFiles.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"currentFile\">\r\n      <div>\r\n        <v-progress-linear\r\n          v-model=\"progress\"\r\n          intermediate\r\n          :buffer-value=\"progress\"\r\n          color=\"primary\"\r\n        >\r\n        </v-progress-linear>\r\n      </div>\r\n    </div>\r\n    <v-row no-gutters justify=\"center\" align=\"center\">\r\n      <v-col cols=\"8\">\r\n        <v-file-input\r\n          show-size\r\n          small-chips\r\n          color=\"primary\"\r\n          :label=\"translate('Attachment')\"\r\n          @change=\"selectFile\"\r\n        ></v-file-input>\r\n      </v-col>\r\n      <v-col cols=\"4\">\r\n        <v-btn color=\"primary\" dark small @click=\"uploadTaskAttachment\">\r\n          {{ translate(\"Upload\") }}\r\n          <v-icon right dark>mdi-cloud-upload</v-icon>\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n    <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport FileUploadService from \"./FileUploadService\";\r\nimport * as LANGUAGE from '../../store/language.json';\r\nimport SnackBar from \"@/components/Snackbar/SnackBar.vue\";\r\nexport default {\r\n  name: \"UploadFiles\",\r\n  data() {\r\n    return {\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      snackbar: {\r\n        show: false,\r\n        message: null,\r\n        color: null,\r\n      },\r\n      fileInfos: [],\r\n      category_id: 1,\r\n      customer_id: 1,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    selectFile(file) {\r\n      this.progress = 0;\r\n      this.currentFile = file;\r\n    },\r\n\r\n    uploadTaskAttachment() {\r\n      if (!this.currentFile) {\r\n        this.snackbar = {\r\n          message: \"Please select a file\",\r\n          error: true\r\n        };\r\n\r\n        this.$refs.snackbar.toggleSnackbar(true);\r\n        return;\r\n      }\r\n\r\n      this.snackbar = {\r\n        message: \"\",\r\n        color: \"\",\r\n        show: false,\r\n        error: false,\r\n      };\r\n\r\n      this.$refs.snackbar.toggleSnackbar(false);\r\n\r\n      FileUploadService.uploadTaskAttachment(this.currentFile, (event) => {\r\n        this.progress = Math.round((100 * event.loaded) / event.total);\r\n      })\r\n        .then((response) => {\r\n          this.snackbar = {\r\n            message: response.data.message,\r\n            error: true\r\n          };\r\n\r\n          this.$refs.snackbar.toggleSnackbar(true);\r\n          return FileUploadService.getFiles(this.$router.currentRoute.params);\r\n        })\r\n        .then((files) => {\r\n          this.fileInfos = files.data;\r\n        })\r\n        .catch((error) => {\r\n          this.progress = 0;\r\n          console.log(error)\r\n          this.currentFile = null;\r\n        });\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    FileUploadService.getFiles(this.$router.currentRoute.params).then((response) => {\r\n      this.fileInfos = response.data;\r\n    });\r\n  },\r\n\r\n  components: {SnackBar}\r\n};\r\n</script>\r\n  \r\n  <style>\r\n</style>"],"mappings":"AAmCA,OAAAA,iBAAA;AACA,YAAAC,QAAA;AACA,OAAAC,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA,EAAAC,SAAA;MACAC,QAAA;MACAC,QAAA;QACAC,IAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAC,SAAA;MACAC,WAAA;MACAC,WAAA;IACA;EACA;EAEAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAjB,QAAA,CAAAkB,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAAzB,QAAA,CAAAiB,SAAA,EAAAS,MAAA;MACA;QACA,OAAA1B,QAAA,CAAAiB,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,WAAAC,IAAA;MACA,KAAAtB,QAAA;MACA,KAAAF,WAAA,GAAAwB,IAAA;IACA;IAEAC,qBAAA;MACA,UAAAzB,WAAA;QACA,KAAAG,QAAA;UACAE,OAAA;UACAqB,KAAA;QACA;QAEA,KAAAC,KAAA,CAAAxB,QAAA,CAAAyB,cAAA;QACA;MACA;MAEA,KAAAzB,QAAA;QACAE,OAAA;QACAC,KAAA;QACAF,IAAA;QACAsB,KAAA;MACA;MAEA,KAAAC,KAAA,CAAAxB,QAAA,CAAAyB,cAAA;MAEAjC,iBAAA,CAAA8B,oBAAA,MAAAzB,WAAA,EAAA6B,KAAA;QACA,KAAA3B,QAAA,GAAA4B,IAAA,CAAAC,KAAA,OAAAF,KAAA,CAAAG,MAAA,GAAAH,KAAA,CAAAI,KAAA;MACA,GACAC,IAAA,CAAAC,QAAA;QACA,KAAAhC,QAAA;UACAE,OAAA,EAAA8B,QAAA,CAAApC,IAAA,CAAAM,OAAA;UACAqB,KAAA;QACA;QAEA,KAAAC,KAAA,CAAAxB,QAAA,CAAAyB,cAAA;QACA,OAAAjC,iBAAA,CAAAyC,QAAA,MAAAC,OAAA,CAAAC,YAAA,CAAAC,MAAA;MACA,GACAL,IAAA,CAAAM,KAAA;QACA,KAAAjC,SAAA,GAAAiC,KAAA,CAAAzC,IAAA;MACA,GACA0C,KAAA,CAAAf,KAAA;QACA,KAAAxB,QAAA;QACAwC,OAAA,CAAAC,GAAA,CAAAjB,KAAA;QACA,KAAA1B,WAAA;MACA;IACA;EACA;EAEA4C,QAAA;IACAjD,iBAAA,CAAAyC,QAAA,MAAAC,OAAA,CAAAC,YAAA,CAAAC,MAAA,EAAAL,IAAA,CAAAC,QAAA;MACA,KAAA5B,SAAA,GAAA4B,QAAA,CAAApC,IAAA;IACA;EACA;EAEA8C,UAAA;IAAAhD;EAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}