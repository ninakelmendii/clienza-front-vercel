{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nimport navBar from \"./modules/navBar\";\nimport profileImage from \"./modules/profileImage\";\nimport * as LANGUAGE from './language.json';\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  state: {\n    token: localStorage.getItem(\"token\") || null,\n    user: localStorage.getItem(\"user\") || null,\n    lead_index: 0,\n    language: 'german',\n    translations: LANGUAGE\n  },\n  getters: {\n    loggedIn(state) {\n      return state.token !== null;\n    }\n  },\n  mutation: {\n    retrieveToken(state, token) {\n      state.token = token;\n    },\n    resetToken(state) {\n      state.token = null;\n    }\n  },\n  retrieveMode(state, darkMode) {\n    state.darkMode = darkMode;\n  },\n  actions: {\n    getItem(context, credentials) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/login\", {\n          email: credentials.email,\n          password: credentials.password\n        }).then(result => {\n          if (result.data.success === true) {\n            const token = JSON.stringify(result.data.data.token);\n            const user = JSON.stringify(result.data.data.user);\n            this.state.token = token, localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"user\", user);\n          }\n          resolve(result);\n        }).catch(error => {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n    nextLead({\n      state\n    }) {\n      state.lead_index = state.lead_index + 1;\n    },\n    prevLead({\n      state\n    }) {\n      state.lead_index = state.lead_index - 1;\n    },\n    changeLanguage({\n      state\n    }, value) {\n      state.language = value.toLowerCase();\n    },\n    toggleLanguage({\n      state\n    }) {\n      state.language = state.language == 'german' ? 'english' : 'german';\n    },\n    getTranslation({\n      state\n    }, word) {\n      // const findMatch = LANGUAGE.find(lng => lng.english.toLowerCase() == word.toLowerCase());\n\n      return new Promise(resolve => {\n        let wordIndex = null;\n        LANGUAGE.forEach((lng, index) => {\n          if (lng.english.toLowerCase() == word.toLowerCase()) {\n            wordIndex = index;\n          }\n        });\n        if (wordIndex === null) {\n          return resolve(word);\n        }\n        if (state.language == 'german') {\n          return resolve(LANGUAGE[wordIndex].german);\n        } else {\n          return resolve(LANGUAGE[wordIndex].english);\n        }\n      });\n    },\n    logOut(context) {\n      localStorage.clear();\n      context.state.token = null;\n      axios.post('/logout').then(response => {\n        console.log('logged out' + response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  userRegister(context, credentials) {\n    return new Promise(resolve => {\n      axios.get(\"register\", {\n        name: credentials.name,\n        email: credentials.email,\n        password: credentials.password\n      }).then(result => {\n        if (result.data.success === true) {\n          resolve(result);\n          this.$router.push({\n            path: \"/login\"\n          });\n        }\n      });\n    });\n  },\n  modules: {\n    navBar,\n    profileImage\n  }\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","axios","navBar","profileImage","LANGUAGE","use","store","Store","state","token","localStorage","getItem","user","lead_index","language","translations","getters","loggedIn","mutation","retrieveToken","resetToken","retrieveMode","darkMode","actions","context","credentials","Promise","resolve","reject","post","email","password","then","result","data","success","JSON","stringify","setItem","catch","error","console","log","nextLead","prevLead","changeLanguage","value","toLowerCase","toggleLanguage","getTranslation","word","wordIndex","forEach","lng","index","english","german","logOut","clear","response","userRegister","get","name","$router","push","path","modules"],"sources":["/Users/ninakelmendi/Desktop/monun/clienza-front/clienza/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\nimport navBar from \"./modules/navBar\";\r\nimport profileImage from \"./modules/profileImage\";\r\nimport * as LANGUAGE from './language.json';\r\n\r\nVue.use(Vuex);\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    token: localStorage.getItem(\"token\") || null,\r\n    user: localStorage.getItem(\"user\") || null,\r\n    lead_index: 0,\r\n    language: 'german',\r\n    translations: LANGUAGE\r\n  },\r\n\r\n  getters: {\r\n    loggedIn(state) {\r\n      return state.token !== null;\r\n    },\r\n  },\r\n\r\n  mutation: {\r\n    retrieveToken(state, token) {\r\n      state.token = token;\r\n    },\r\n    resetToken(state){\r\n      state.token = null;\r\n    },\r\n  },\r\n\r\n  retrieveMode(state, darkMode) {\r\n    state.darkMode = darkMode;\r\n  },\r\n\r\n  actions: {\r\n    getItem(context, credentials) {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .post(\"/login\", {\r\n            email: credentials.email,\r\n            password: credentials.password,\r\n          })\r\n          .then((result) => {\r\n            if (result.data.success === true) {\r\n              const token = JSON.stringify(result.data.data.token);\r\n              const user = JSON.stringify(result.data.data.user);\r\n              (this.state.token = token), localStorage.setItem(\"token\", token);\r\n              localStorage.setItem(\"user\", user);\r\n            }\r\n            resolve(result);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n\r\n    nextLead({state}) {\r\n      state.lead_index = state.lead_index + 1; \r\n    },\r\n\r\n    prevLead({state}) {\r\n      state.lead_index = state.lead_index - 1; \r\n    },\r\n\r\n    changeLanguage({ state }, value){\r\n      state.language = value.toLowerCase();\r\n    },\r\n\r\n    toggleLanguage({ state }) {\r\n      state.language = state.language == 'german' ? 'english' : 'german';\r\n    },\r\n\r\n    getTranslation({ state }, word){\r\n      // const findMatch = LANGUAGE.find(lng => lng.english.toLowerCase() == word.toLowerCase());\r\n\r\n      return new Promise((resolve) => {\r\n        let wordIndex = null;\r\n        LANGUAGE.forEach((lng, index) => {\r\n          if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n            wordIndex = index;\r\n          }\r\n        });\r\n\r\n        if(wordIndex === null) {\r\n          return resolve(word);\r\n        }\r\n\r\n        if(state.language == 'german') {\r\n          return resolve(LANGUAGE[wordIndex].german);\r\n        } else {\r\n          return resolve(LANGUAGE[wordIndex].english);\r\n        }\r\n      })\r\n    },\r\n\r\n    logOut(context) {\r\n      localStorage.clear();\r\n      context.state.token = null;\r\n\r\n      axios\r\n          .post('/logout')\r\n          .then((response) => {\r\n            console.log('logged out' + response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      },\r\n    },\r\n\r\n  userRegister(context, credentials) {\r\n    return new Promise((resolve) => {\r\n      axios\r\n        .get(\"register\", {\r\n          name: credentials.name,\r\n          email: credentials.email,\r\n          password: credentials.password,\r\n        })\r\n        .then((result) => {\r\n          if (result.data.success === true) {\r\n            resolve(result);\r\n            this.$router.push({\r\n              path: \"/login\",\r\n            });\r\n          }\r\n        });\r\n    });\r\n  },\r\n  modules: {\r\n    navBar,\r\n    profileImage\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}