{"ast":null,"code":"// import FileUploadService from \"./FileUploadService\";e\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from \"@/components/Snackbar/SnackBar.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"UploadFiles\",\n  props: {\n    modified: String,\n    customer_id: Number,\n    type: String\n  },\n  data() {\n    return {\n      currentFile: null,\n      progress: 0,\n      snackbar: {\n        show: false,\n        message: null,\n        color: null,\n        error: false\n      },\n      fileInfos: [],\n      category_id: 1,\n      folderName: \"\"\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == \"german\") {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    selectFile(file) {\n      this.progress = 0;\n      console.log(file);\n      this.currentFile = file;\n    },\n    async uploadCustomerDocument() {\n      if (!this.currentFile) {\n        this.snackbar = {\n          message: \"Please select a file\",\n          error: true\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n        return;\n      }\n      axios.post('/internal_documents', {\n        document: this.currentFile,\n        file_name: this.currentFile,\n        category: this.type.toLowerCase(),\n        is_tab: true,\n        customer_id: this.customer_id,\n        type: this.type\n      }, {\n        headers: {\n          'Content-type': \"multipart/form-data\"\n        }\n      }).then(() => {\n        this.currentFile = null;\n      }).catch(err => console.log(err));\n    }\n  },\n  mounted() {\n    // FileUploadService.getFiles(this.$router.currentRoute.params).then((response) => {\n    //     this.fileInfos = response.data;\n    // });\n    // axios\n    //     .get(\"/customer/\" + this.customer_id)\n    //     .then((response) => {\n    //     const customer = response.data.data;\n    //     this.folderName = `${customer.first_name} ${customer.last_name} - ${customer.id}`;\n    // })\n    //     .catch((error) => {\n    //     console.log(error);\n    // });\n  },\n  components: {\n    SnackBar\n  }\n};","map":{"version":3,"names":["LANGUAGE","SnackBar","axios","name","props","modified","String","customer_id","Number","type","data","currentFile","progress","snackbar","show","message","color","error","fileInfos","category_id","folderName","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","selectFile","file","console","log","uploadCustomerDocument","$refs","toggleSnackbar","post","document","file_name","category","is_tab","headers","then","catch","err","mounted","components"],"sources":["src/assets/services/UploadCustomerFiles.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <div v-if=\"currentFile\">\r\n        <div>\r\n          <v-progress-linear\r\n            v-model=\"progress\"\r\n            intermediate\r\n            :buffer-value=\"progress\"\r\n            color=\"primary\"\r\n          >\r\n          </v-progress-linear>\r\n        </div>\r\n      </div>\r\n      <v-row class=\"ml-4 flex-nowrap\" :no-gutters=\"modified && !currentFile\" justify=\"center\" align=\"center\">\r\n        <div class=\"p-0\" :class=\"{'custom-buttons': modified && !currentFile}\">\r\n          <label for=\"file-input\" v-show=\"modified && !currentFile\">\r\n            <div class=\"custom-buttons\">\r\n              <svg style=\"transform: rotate(180deg);\" width=\"16\" height=\"19\" viewBox=\"0 0 16 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M10.5688 7.159L8.46605 9.42109V1H7.72982V9.4224L5.62623 7.15878L5.08684 7.66084L8.09712 10.8986L11.1081 7.66084L10.5688 7.159Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.4\"/>\r\n                <path d=\"M15.1949 18.7483H1V4.5542H5.60822V5.29044H1.73606V18.0121H14.4586V5.29044H10.5869V4.5542H15.1947L15.1949 18.7483Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.4\"/>\r\n              </svg>\r\n            </div>\r\n          </label>\r\n          <v-file-input\r\n            v-show=\"!modified || currentFile\"\r\n            id=\"file-input\"\r\n            show-size\r\n            small-chips\r\n            color=\"primary\"\r\n            :label=\"translate('Attachment')\"\r\n            @change=\"selectFile\"\r\n          ></v-file-input>\r\n        </div>\r\n        <v-col cols=\"4\" v-if=\"currentFile\">\r\n          <v-btn color=\"success\" dark small @click=\"uploadCustomerDocument\">\r\n            {{translate('Upload')}}\r\n            <v-icon right dark>mdi-cloud-upload</v-icon>\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import FileUploadService from \"./FileUploadService\";e\r\nimport * as LANGUAGE from '../../store/language.json';\r\nimport SnackBar from \"@/components/Snackbar/SnackBar.vue\";\r\nimport axios from \"axios\";\r\nexport default {\r\n    name: \"UploadFiles\",\r\n    props: {\r\n        modified: String,\r\n        customer_id: Number,\r\n        type: String\r\n    },\r\n    data() {\r\n        return {\r\n            currentFile: null,\r\n            progress: 0,\r\n            snackbar: {\r\n                show: false,\r\n                message: null,\r\n                color: null,\r\n                error: false\r\n            },\r\n            fileInfos: [],\r\n            category_id: 1,\r\n            folderName: \"\"\r\n        };\r\n    },\r\n    methods: {\r\n        translate(word) {\r\n            let wordIndex = null;\r\n            LANGUAGE.forEach((lng, index) => {\r\n                if (lng.english.toLowerCase() == word.toLowerCase()) {\r\n                    wordIndex = index;\r\n                }\r\n            });\r\n            if (wordIndex === null) {\r\n                return word;\r\n            }\r\n            if (this.$store.state.language == \"german\") {\r\n                return LANGUAGE[wordIndex].german;\r\n            }\r\n            else {\r\n                return LANGUAGE[wordIndex].english;\r\n            }\r\n        },\r\n        selectFile(file) {\r\n            this.progress = 0;\r\n            console.log(file);\r\n            this.currentFile = file;\r\n        },\r\n        async uploadCustomerDocument() {\r\n            if (!this.currentFile) {\r\n                this.snackbar = {\r\n                    message: \"Please select a file\",\r\n                    error: true\r\n                };\r\n                this.$refs.snackbar.toggleSnackbar(true);\r\n                return;\r\n            }\r\n            \r\n            axios\r\n                .post('/internal_documents', {\r\n                    document: this.currentFile,\r\n                    file_name: this.currentFile,\r\n                    category: this.type.toLowerCase(),\r\n                    is_tab: true,\r\n                    customer_id: this.customer_id,\r\n                    type: this.type\r\n                }, {\r\n                    headers: {\r\n                    'Content-type': \"multipart/form-data\"\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    this.currentFile = null;\r\n                }).catch(err => console.log(err));\r\n        },\r\n    },\r\n    mounted() {\r\n        // FileUploadService.getFiles(this.$router.currentRoute.params).then((response) => {\r\n        //     this.fileInfos = response.data;\r\n        // });\r\n        // axios\r\n        //     .get(\"/customer/\" + this.customer_id)\r\n        //     .then((response) => {\r\n        //     const customer = response.data.data;\r\n        //     this.folderName = `${customer.first_name} ${customer.last_name} - ${customer.id}`;\r\n        // })\r\n        //     .catch((error) => {\r\n        //     console.log(error);\r\n        // });\r\n    },\r\n    components: { SnackBar }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.custom-buttons {\r\n  background: #36a5dd;\r\n  box-shadow: 0px 2px 6px rgba(54, 165, 221, 0.2);\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  height: 36px;\r\n  width: 36px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n</style>"],"mappings":"AA6CA;AACA,YAAAA,QAAA;AACA,OAAAC,QAAA;AACA,OAAAC,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,QAAA,EAAAC,MAAA;IACAC,WAAA,EAAAC,MAAA;IACAC,IAAA,EAAAH;EACA;EACAI,KAAA;IACA;MACAC,WAAA;MACAC,QAAA;MACAC,QAAA;QACAC,IAAA;QACAC,OAAA;QACAC,KAAA;QACAC,KAAA;MACA;MACAC,SAAA;MACAC,WAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MACAxB,QAAA,CAAAyB,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MACA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MACA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAAhC,QAAA,CAAAwB,SAAA,EAAAS,MAAA;MACA,OACA;QACA,OAAAjC,QAAA,CAAAwB,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,WAAAC,IAAA;MACA,KAAAvB,QAAA;MACAwB,OAAA,CAAAC,GAAA,CAAAF,IAAA;MACA,KAAAxB,WAAA,GAAAwB,IAAA;IACA;IACA,MAAAG,uBAAA;MACA,UAAA3B,WAAA;QACA,KAAAE,QAAA;UACAE,OAAA;UACAE,KAAA;QACA;QACA,KAAAsB,KAAA,CAAA1B,QAAA,CAAA2B,cAAA;QACA;MACA;MAEAtC,KAAA,CACAuC,IAAA;QACAC,QAAA,OAAA/B,WAAA;QACAgC,SAAA,OAAAhC,WAAA;QACAiC,QAAA,OAAAnC,IAAA,CAAAoB,WAAA;QACAgB,MAAA;QACAtC,WAAA,OAAAA,WAAA;QACAE,IAAA,OAAAA;MACA;QACAqC,OAAA;UACA;QACA;MACA,GACAC,IAAA;QACA,KAAApC,WAAA;MACA,GAAAqC,KAAA,CAAAC,GAAA,IAAAb,OAAA,CAAAC,GAAA,CAAAY,GAAA;IACA;EACA;EACAC,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACA;EACAC,UAAA;IAAAlD;EAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}