{"ast":null,"code":"import axios from 'axios';\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from '../Snackbar/SnackBar.vue';\nexport default {\n  name: \"LoginComponent\",\n  data() {\n    return {\n      snackbar: {\n        show: false,\n        message: null,\n        color: null\n      },\n      email: \"\"\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    resetPassword() {\n      axios.post('/forgot-password', {\n        email: this.email\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        this.snackbar = {\n          message: error.response.data.message,\n          color: \"error\",\n          error: true\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n      });\n    }\n  },\n  components: {\n    SnackBar\n  }\n};","map":{"version":3,"names":["axios","LANGUAGE","SnackBar","name","data","snackbar","show","message","color","email","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","resetPassword","post","then","response","console","log","catch","error","$refs","toggleSnackbar","components"],"sources":["src/components/Authentication/ResetPassword.vue"],"sourcesContent":["<template>\r\n  <v-container fill-height fluid>\r\n    <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\r\n    <v-row align-self=\"center\" justify=\"center\">\r\n      <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n        <v-row class=\"d-flex justify-center\">\r\n          <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n            <div class=\"d-flex justify-center\">\r\n              <v-img\r\n                  src=\"@/assets/images/logo-login.png\"\r\n                  max-width=\"120\"\r\n              ></v-img>\r\n            </div>\r\n            <v-form class=\"mt-15\" ref=\"form\">\r\n              <v-text-field\r\n                  v-model=\"email\"\r\n                  :label=\"translate('Email')\"\r\n                  type=\"email\"\r\n                  clearable\r\n                  required\r\n                  flat\r\n                  filled\r\n                  background-color=\"#fff\"\r\n                  prepend-inner-icon=\"mdi-account-outline\"\r\n              ></v-text-field>\r\n\r\n              <v-row class=\"mb-3\" no-gutters>\r\n                <v-col cols=\"12\">\r\n                  <v-btn block x-large color=\"#1a1f3a\" @click=\"resetPassword\">\r\n                    {{ translate('Reset Password') }}\r\n                  </v-btn>\r\n                </v-col>\r\n\r\n                <v-col cols=\"6\" class=\"d-flex align-center mt-4\">\r\n                  <router-link to=\"/login\">{{ translate('Log In') }}</router-link>\r\n                </v-col>\r\n              </v-row>\r\n            </v-form>\r\n          </v-col>\r\n        </v-row>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios'\r\nimport * as LANGUAGE from '../../store/language.json';\r\nimport SnackBar from '../Snackbar/SnackBar.vue';\r\n\r\nexport default {\r\n  name: \"LoginComponent\",\r\n  data() {\r\n    return {\r\n      snackbar: {\r\n        show: false,\r\n        message: null,\r\n        color: null,\r\n      },\r\n      email: \"\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    resetPassword() {\r\n      axios\r\n        .post('/forgot-password', {\r\n          email: this.email\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data)\r\n        })\r\n        .catch((error) => {\r\n          this.snackbar = {\r\n            message: error.response.data.message,\r\n            color: \"error\",\r\n            error: true,\r\n          };\r\n\r\n          this.$refs.snackbar.toggleSnackbar(true);\r\n        })\r\n    }\r\n  },\r\n\r\n  components: {\r\n    SnackBar\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image {\r\n  background-color: red;\r\n}\r\n\r\nbutton {\r\n  color: #fff !important;\r\n}\r\n</style>"],"mappings":"AA+CA,OAAAA,KAAA;AACA,YAAAC,QAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,IAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAC,KAAA;IACA;EACA;EAEAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAZ,QAAA,CAAAa,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAApB,QAAA,CAAAY,SAAA,EAAAS,MAAA;MACA;QACA,OAAArB,QAAA,CAAAY,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,cAAA;MACAvB,KAAA,CACAwB,IAAA;QACAf,KAAA,OAAAA;MACA,GACAgB,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAtB,IAAA;MACA,GACAyB,KAAA,CAAAC,KAAA;QACA,KAAAzB,QAAA;UACAE,OAAA,EAAAuB,KAAA,CAAAJ,QAAA,CAAAtB,IAAA,CAAAG,OAAA;UACAC,KAAA;UACAsB,KAAA;QACA;QAEA,KAAAC,KAAA,CAAA1B,QAAA,CAAA2B,cAAA;MACA;IACA;EACA;EAEAC,UAAA;IACA/B;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}