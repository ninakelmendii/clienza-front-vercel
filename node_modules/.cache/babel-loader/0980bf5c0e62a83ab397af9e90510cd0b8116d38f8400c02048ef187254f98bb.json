{"ast":null,"code":"import axios from 'axios';\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from \"../Snackbar/SnackBar.vue\";\nexport default {\n  data() {\n    return {\n      snackbar: {\n        show: false,\n        message: \"\",\n        color: null\n      },\n      datepickermenu: false,\n      pendent: {\n        date: '',\n        stunde: '',\n        minute: ''\n      }\n    };\n  },\n  props: ['close', 'item'],\n  methods: {\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    formatHour(date) {\n      const options = {\n        hour: 'numeric',\n        hour12: false\n      };\n      return parseInt(new Date(date).toLocaleTimeString(undefined, options)).toString();\n    },\n    formatMinute(date) {\n      const options = {\n        minute: 'numeric'\n      };\n      return parseInt(new Date(date).toLocaleDateString(undefined, options)).toString();\n    },\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    showSnackBar(text, error) {\n      this.snackbar = {\n        message: text,\n        color: error,\n        error: error ? true : false\n      };\n      this.$refs.snackbar.toggleSnackbar(true);\n    },\n    submit() {\n      if (this.pendent.date === '') {\n        this.showSnackBar(this.translate('Please fill in the date field'), true);\n        return false;\n      }\n      if (this.pendent.stunde === '') {\n        this.showSnackBar(this.translate('Please fill in the hour field'), true);\n        return false;\n      }\n      if (this.pendent.minute === '') {\n        this.showSnackBar(this.translate('Please fill in the minute field'), true);\n        return false;\n      }\n      const formData = new FormData();\n      formData.append('pendingDate', this.pendent.date);\n      formData.append('pendingHour', this.pendent.stunde);\n      formData.append('pendingMinute', this.pendent.minute);\n      axios.post(`/pending/feedback/${this.$route.params.id}`, formData).then(response => {\n        if (response.data) {\n          this.close();\n          this.showSnackBar(this.translate(\"Success\"), false);\n        }\n      }).catch(error => {\n        this.showSnackBar(error.response.data.message, true);\n      });\n    },\n    getItem() {\n      if (this.item.pendingFeedback) {\n        this.pendent.date = this.formatDate(this.item.pendingFeedback);\n        this.pendent.stunde = this.formatHour(this.item.pendingFeedback);\n        this.pendent.minute = this.formatMinute(this.item.pendingFeedback);\n      }\n    }\n  },\n  mounted() {\n    this.getItem();\n  },\n  components: {\n    SnackBar\n  }\n};","map":{"version":3,"names":["axios","LANGUAGE","SnackBar","data","snackbar","show","message","color","datepickermenu","pendent","date","stunde","minute","props","methods","formatDate","options","year","month","day","Date","toLocaleDateString","undefined","formatHour","hour","hour12","parseInt","toLocaleTimeString","toString","formatMinute","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","showSnackBar","text","error","$refs","toggleSnackbar","submit","formData","FormData","append","post","$route","params","id","then","response","close","catch","getItem","item","pendingFeedback","mounted","components"],"sources":["src/components/Dialogs/PendentDialog.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row>\n      <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\n        <v-col cols=\"12\" md=\"12\" lg=\"12\">\n          <v-row>\n            <v-card>\n                <v-row>\n                    <v-col cols=\"12\" md=\"12\" class=\"d-flex align-center\">\n                        <h2 style=\"display: flex; align-items: center;\">{{translate('Pending until')}}</h2>\n                    </v-col>\n                </v-row>\n    \n                <v-card-text>\n                    <v-container>\n                        <v-row>\n                            <v-col cols=\"12\" md=\"12\">\n                                <v-menu\n                                    v-model=\"datepickermenu\"\n                                    :close-on-content-click=\"false\"\n                                    :nudge-right=\"40\"\n                                    transition=\"scale-transition\"\n                                    offset-y\n                                    min-width=\"290px\"\n                                    >\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-text-field\n                                        v-model=\"pendent.date\"\n                                        :label=\"translate('Date')\"\n                                        prepend-icon=\"mdi-calendar\"\n                                        readonly\n                                        v-on=\"on\"\n                                        ></v-text-field>\n                                    </template>\n                                    <v-date-picker\n                                        v-model=\"pendent.date\"\n                                        no-title\n                                        scrollable\n                                        @input=\"datepickermenu = false\"\n                                    ></v-date-picker>\n                                </v-menu>\n                            </v-col>\n                            <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                                <v-text-field\n                                    v-model=\"pendent.stunde\"\n                                    :label=\"translate('Hour')\"\n                                    type=\"number\"\n                                ></v-text-field>\n                            </v-col>\n                            <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                                <v-text-field\n                                    v-model=\"pendent.minute\"\n                                    :label=\"translate('Minute')\"\n                                    type=\"number\"\n                                ></v-text-field>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-text>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"close\">\n                    {{ translate('Cancel') }}\n                  </v-btn>\n\n                  <v-btn\n                    color=\"blue darken-1\"\n                    text\n                    @click=\"submit\"\n                  >\n                    {{translate(\"Create\")}}\n                  </v-btn>\n                </v-card-actions>\n            </v-card>\n          </v-row>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from \"../Snackbar/SnackBar.vue\";\n  \n  export default {\n    data() {\n      return {\n        snackbar: {\n          show: false,\n          message: \"\",\n          color: null,\n        },\n        datepickermenu: false,\n        pendent: {\n            date: '',\n            stunde: '',\n            minute: '',\n        }\n      };\n    },\n    props: ['close', 'item'],\n    methods: {\n      formatDate(date) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(date).toLocaleDateString(undefined, options);\n      },\n      formatHour(date) {\n        const options = { hour: 'numeric', hour12: false };\n        return parseInt(new Date(date).toLocaleTimeString(undefined, options)).toString();\n      },\n      formatMinute(date) {\n        const options = { minute: 'numeric' };\n        return parseInt(new Date(date).toLocaleDateString(undefined, options)).toString()\n      },\n      translate(word) {\n        let wordIndex = null;\n  \n        LANGUAGE.forEach((lng, index) => {\n          if(lng.english.toLowerCase() == word.toLowerCase()) {\n            wordIndex = index;\n          }\n        });\n  \n        if(wordIndex === null) {\n          return word;\n        }\n  \n        if(this.$store.state.language == 'german') {\n          return LANGUAGE[wordIndex].german;\n        } else {\n          return LANGUAGE[wordIndex].english;\n        }\n      },\n      showSnackBar(text,error) {\n        this.snackbar = {\n            message: text,\n            color: error,\n            error: error ? true : false,\n          };\n          this.$refs.snackbar.toggleSnackbar(true);\n      },\n      submit() {\n        if(this.pendent.date === '') {\n          this.showSnackBar(this.translate('Please fill in the date field'), true)\n          return false;\n        }\n        if(this.pendent.stunde === '') {\n          this.showSnackBar(this.translate('Please fill in the hour field'), true)\n          return false;\n        }\n        if(this.pendent.minute === '') {\n          this.showSnackBar(this.translate('Please fill in the minute field'), true)\n          return false;\n        }\n        const formData = new FormData();\n        formData.append('pendingDate', this.pendent.date);\n        formData.append('pendingHour', this.pendent.stunde);\n        formData.append('pendingMinute', this.pendent.minute);\n        axios\n          .post(`/pending/feedback/${this.$route.params.id}`, formData)\n          .then((response) => {\n            if(response.data) {\n              this.close();\n              this.showSnackBar(this.translate(\"Success\"), false)\n            }\n          })\n          .catch((error) => {\n            this.showSnackBar(error.response.data.message, true)\n          });\n      },\n      getItem() {\n        if(this.item.pendingFeedback) {\n          this.pendent.date = this.formatDate(this.item.pendingFeedback);\n          this.pendent.stunde = this.formatHour(this.item.pendingFeedback);\n          this.pendent.minute = this.formatMinute(this.item.pendingFeedback);\n        }\n      }\n    },\n    mounted() {\n      this.getItem();\n    },\n    components: {\n      SnackBar\n    },\n  };\n  </script>\n  \n<style scoped>\n    .v-card {\n        overflow: hidden;\n    }\n    h2 {\n        font-family: \"PT Sans\", sans-serif;\n        margin: 30px auto 0;\n    }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}