{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from '../Snackbar/SnackBar.vue';\nexport default {\n  name: \"LoginComponent\",\n  data() {\n    return {\n      snackbar: {\n        show: false,\n        message: \"\",\n        color: null\n      },\n      url: 'https://crmclienza.ch/',\n      checkbox: false,\n      show: false,\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    login() {\n      this.$store.dispatch(\"getItem\", {\n        email: this.email,\n        password: this.password\n      }).then(response => {\n        localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n        localStorage.setItem(\"user\", JSON.stringify(response.data.data));\n        localStorage.setItem(\"role\", JSON.stringify(response.data.role));\n        window.location.href = this.url;\n      }).catch(error => {\n        this.snackbar = {\n          message: error.response.data.message,\n          color: \"error\",\n          error: true\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n      });\n    }\n  },\n  goToRegister() {\n    this.$router.push(\"/register\");\n  },\n  components: {\n    SnackBar\n  }\n};","map":{"version":3,"names":["LANGUAGE","SnackBar","name","data","snackbar","show","message","color","url","checkbox","email","password","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","login","dispatch","then","response","localStorage","setItem","JSON","stringify","token","role","window","location","href","catch","error","$refs","toggleSnackbar","goToRegister","$router","push","components"],"sources":["src/components/Authentication/Login.vue"],"sourcesContent":["<template>\r\n  <v-container fill-height fluid>\r\n    <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\r\n    <v-row align-self=\"center\" justify=\"center\">\r\n      <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n        <v-row class=\"d-flex justify-center\">\r\n          <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n            <div class=\"d-flex justify-center\">\r\n              <v-img\r\n                src=\"@/assets/images/logo-login.png\"\r\n                max-width=\"120\"\r\n              ></v-img>\r\n            </div>\r\n            <v-form class=\"mt-15\" ref=\"form\">\r\n              <v-text-field\r\n                v-model=\"email\"\r\n                :label=\"translate('Your email')\"\r\n                type=\"email\"\r\n                clearable\r\n                required\r\n                flat\r\n                filled\r\n                background-color=\"#fff\"\r\n                prepend-inner-icon=\"mdi-email-outline\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"password\"\r\n                :label=\"translate('Password')\"\r\n                :type=\"show ? 'text' : 'password'\"\r\n                @click:append=\"show = !show\"\r\n                required\r\n                flat\r\n                :append-icon=\"show ? 'mdi-eye-outline' : 'mdi-eye-off-outline'\"\r\n                filled\r\n                background-color=\"#fff\"\r\n                prepend-inner-icon=\"mdi-lock-outline\"\r\n              ></v-text-field>\r\n\r\n              <v-row class=\"mb-3\">\r\n                <v-col cols=\"6\">\r\n                  <v-checkbox\r\n                    v-model=\"checkbox\"\r\n                    :label=\"translate('Remember me')\"\r\n                    required\r\n                    color=\"#1a1f3a\"\r\n                  ></v-checkbox>\r\n                </v-col>\r\n\r\n                <v-col cols=\"6\" class=\"d-flex justify-end\">\r\n                  <router-link to=\"/resetpassword\" class=\"mt-5\"\r\n                    >{{ translate('Reset password') }}</router-link\r\n                  >\r\n                </v-col>\r\n              </v-row>\r\n\r\n              <v-btn block x-large color=\"#1a1f3a\" @click=\"login\">\r\n                {{ translate(\"Log in\") }}\r\n              </v-btn>\r\n            </v-form>\r\n\r\n            <h4 class=\"mt-10 text-center\">\r\n              {{ translate(\"Don't have an account?\") }}\r\n              <router-link to=\"/register\">{{ translate(\"Sign up\") }}</router-link>\r\n            </h4>\r\n          </v-col>\r\n        </v-row>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport * as LANGUAGE from '../../store/language.json';\r\nimport SnackBar from '../Snackbar/SnackBar.vue';\r\n\r\nexport default {\r\n  name: \"LoginComponent\",\r\n  data() {\r\n    return {\r\n      snackbar: {\r\n        show: false,\r\n        message: \"\",\r\n        color: null,\r\n      },\r\n\r\n      url: 'https://crmclienza.ch/',\r\n      checkbox: false,\r\n      show: false,\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    login() {\r\n      this.$store\r\n        .dispatch(\"getItem\", {\r\n          email: this.email,\r\n          password: this.password,\r\n        })\r\n        .then((response) => {\r\n\r\n          localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data.data));\r\n          localStorage.setItem(\"role\", JSON.stringify(response.data.role))\r\n\r\n          window.location.href = this.url;\r\n\r\n        })\r\n        .catch((error) => {\r\n          this.snackbar = {\r\n            message: error.response.data.message,\r\n            color: \"error\",\r\n            error: true,\r\n          };\r\n\r\n          this.$refs.snackbar.toggleSnackbar(true);\r\n        });\r\n    },\r\n  },\r\n\r\n  goToRegister() {\r\n    this.$router.push(\"/register\");\r\n  },\r\n  \r\n  components: {\r\n    SnackBar\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image {\r\n  background-color: red;\r\n}\r\n\r\nbutton {\r\n  color: #fff !important;\r\n}\r\n</style>"],"mappings":";AAyEA,YAAAA,QAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,IAAA;QACAC,OAAA;QACAC,KAAA;MACA;MAEAC,GAAA;MACAC,QAAA;MACAJ,IAAA;MACAK,KAAA;MACAC,QAAA;IACA;EACA;EAEAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAf,QAAA,CAAAgB,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAAvB,QAAA,CAAAe,SAAA,EAAAS,MAAA;MACA;QACA,OAAAxB,QAAA,CAAAe,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,MAAA;MACA,KAAAJ,MAAA,CACAK,QAAA;QACAhB,KAAA,OAAAA,KAAA;QACAC,QAAA,OAAAA;MACA,GACAgB,IAAA,CAAAC,QAAA;QAEAC,YAAA,CAAAC,OAAA,UAAAC,IAAA,CAAAC,SAAA,CAAAJ,QAAA,CAAAzB,IAAA,CAAA8B,KAAA;QACAJ,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAJ,QAAA,CAAAzB,IAAA,CAAAA,IAAA;QACA0B,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAJ,QAAA,CAAAzB,IAAA,CAAA+B,IAAA;QAEAC,MAAA,CAAAC,QAAA,CAAAC,IAAA,QAAA7B,GAAA;MAEA,GACA8B,KAAA,CAAAC,KAAA;QACA,KAAAnC,QAAA;UACAE,OAAA,EAAAiC,KAAA,CAAAX,QAAA,CAAAzB,IAAA,CAAAG,OAAA;UACAC,KAAA;UACAgC,KAAA;QACA;QAEA,KAAAC,KAAA,CAAApC,QAAA,CAAAqC,cAAA;MACA;IACA;EACA;EAEAC,aAAA;IACA,KAAAC,OAAA,CAAAC,IAAA;EACA;EAEAC,UAAA;IACA5C;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}