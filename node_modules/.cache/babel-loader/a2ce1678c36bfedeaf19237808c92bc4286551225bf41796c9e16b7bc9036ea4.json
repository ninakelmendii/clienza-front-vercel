{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from '../Snackbar/SnackBar.vue';\nVue.use(require(\"vue-moment\"));\nimport axios from \"axios\";\nexport default {\n  name: \"ApplicationTab\",\n  data() {\n    return {\n      snackbar: {\n        show: false,\n        message: null,\n        color: null\n      },\n      items: [{\n        text: 'Pending',\n        value: 1\n      }, {\n        text: 'Accepted',\n        value: 2\n      }, {\n        text: 'Commissioned',\n        value: 5\n      }, {\n        text: 'Archived',\n        value: 4\n      }, {\n        text: 'Declined',\n        value: 3\n      }],\n      application_status: '',\n      cards: [],\n      application_status_data: [],\n      downloadUrl: null,\n      default_status: null,\n      insurances: [],\n      kvg_name: null\n    };\n  },\n  components: {\n    SnackBar\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      if (!word) return word;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    getCustomerApplications() {\n      axios.get('mandate/customer/' + this.$router.currentRoute.params.client_id).then(response => {\n        this.cards = [];\n        console.log(\"-----\", response.data);\n        for (let $i = 0; response.data.data.length > 0; $i++) {\n          let newData = response.data.data[$i];\n          if (response.data.data[$i].status == 'Pending') {\n            newData.color = 'pending';\n            newData.label = response.data.data[$i].status;\n            newData.class = 'pending';\n            newData.icon = 'mdi-timer-sand-complete';\n            this.default_status = 1;\n          }\n          if (response.data.data[$i].status == 'Mandate added') {\n            newData.color = 'success';\n            newData.label = response.data.data[$i].status;\n            newData.class = 'accepted';\n            newData.icon = 'mdi-check';\n            this.default_status = 2;\n          }\n          if (response.data.data[$i].status == 'Declined') {\n            newData.color = 'error';\n            newData.label = response.data.data[$i].status;\n            newData.class = 'declined';\n            newData.icon = 'mdi-close';\n            this.default_status = 3;\n          }\n          if (response.data.data[$i].status == 'Archived') {\n            newData.color = 'grey';\n            newData.label = response.data.data[$i].status;\n            newData.class = 'archived';\n            newData.icon = 'mdi-check';\n            this.default_status = 5;\n          }\n          if (response.data.data[$i].status == 'Commissioned') {\n            newData.color = 'primary';\n            newData.label = response.data.data[$i].status;\n            newData.class = 'commissioned';\n            newData.icon = 'mdi-timer-sand-complete';\n            this.default_status = 4;\n          }\n          this.cards.push(newData);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getInsurances() {\n      axios.get('/customer/' + this.$router.currentRoute.params.client_id).then(res => {\n        const {\n          vvg_id\n        } = res.data.data;\n        axios.get('/insurances').then(response => {\n          const insurances = response.data.data;\n          this.kvg_name = insurances.find(i => i.id == vvg_id).name.toLowerCase();\n        }).catch(err => console.log(err));\n      }).catch(err => console.log(err));\n    },\n    getSingleLogo(id) {\n      return this.insurances.find(ins => ins.id == id).name;\n    },\n    updateCustomerMandateStatus(status_id) {\n      axios.get('/mandate/update_status' + this.$router.currentRoute.params.client_id, {\n        params: {\n          status_id: status_id\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    updateStatus(application_id, event) {\n      axios.post('/mandate/update_status/' + application_id, {\n        status_id: event\n      }).then(() => {\n        this.snackbar = {\n          message: \"Data updated successfully\",\n          color: \"success\",\n          error: false\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n        this.getCustomerApplications();\n        this.default_status = event;\n        // window.location.reload();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getApplicationsStatuses() {\n      axios.get(\"/mandate/statuses\").then(response => {\n        for (let $i = 0; response.data.data.length > 0; $i++) {\n          this.application_status_data.push({\n            text: this.translate(response.data.data[$i].name),\n            value: response.data.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async downloadPdfFile() {\n      axios.get('download_internal?id=' + this.downloadUrl.id, {\n        responseType: 'blob'\n      }).then(res => {\n        const file = window.URL.createObjectURL(res.data);\n        let documentUrl = document.createElement('a');\n        documentUrl.href = file;\n        documentUrl.download = this.downloadUrl.filename;\n        document.body.appendChild(documentUrl);\n        documentUrl.click();\n        documentUrl.remove();\n        window.URL.revokeObjectURL(file);\n      }).catch(err => console.log(err));\n    },\n    async getDownloadUrl() {\n      axios.get('/internal_documents?category=mandate_tab&customer_id=' + this.$router.currentRoute.params.client_id).then(response => {\n        this.downloadUrl = response.data.data[0];\n      }).catch(err => console.log(err));\n    }\n  },\n  async mounted() {\n    this.getCustomerApplications();\n    this.getApplicationsStatuses();\n    this.getDownloadUrl();\n    this.getInsurances();\n  }\n};","map":{"version":3,"names":["Vue","LANGUAGE","SnackBar","use","require","axios","name","data","snackbar","show","message","color","items","text","value","application_status","cards","application_status_data","downloadUrl","default_status","insurances","kvg_name","components","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","getCustomerApplications","get","$router","currentRoute","params","client_id","then","response","console","log","$i","length","newData","status","label","class","icon","push","catch","error","getInsurances","res","vvg_id","find","i","id","err","getSingleLogo","ins","updateCustomerMandateStatus","status_id","updateStatus","application_id","event","post","$refs","toggleSnackbar","getApplicationsStatuses","downloadPdfFile","responseType","file","window","URL","createObjectURL","documentUrl","document","createElement","href","download","filename","body","appendChild","click","remove","revokeObjectURL","getDownloadUrl","mounted"],"sources":["src/components/Applications/MandateTab.vue"],"sourcesContent":["<template>\r\n  <v-row class=\"mt-15 mb-15\">\r\n    <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\r\n    <v-col\r\n      cols=\"12\"\r\n      v-for=\"card in cards.slice(0, 1)\"\r\n      :key=\"card.id\"\r\n    >\r\n      <v-card\r\n        outlined\r\n        rounded\r\n        max-width=\"280\"\r\n        class=\"card application-card pa-3\"\r\n        :class=\"card.class\"\r\n      >\r\n        <div class=\"d-flex justify-center\">\r\n          <div class=\"application-status\" :class=\"card.class\">\r\n            <v-icon class=\"mt-2\" dark>{{ card.icon }}</v-icon>\r\n          </div>\r\n        </div>\r\n\r\n        <v-row>\r\n          <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\r\n            <v-select v-model=\"default_status\" v-if=\"$helperPlugin.ifAdmin()\" flat label=\"Status\" :items=\"application_status_data\" v-on:change=\"updateStatus(card.id, $event)\"> </v-select>\r\n            <p v-else style=\"margin-top: 5px\">{{ card.status }}</p>\r\n          </v-col>\r\n\r\n          <!-- <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\" class=\"d-flex\" v-if=\"downloadUrl\">\r\n            <v-btn @click=\"downloadPdfFile\" icon color=\"grey\"><svg width=\"19\" height=\"24\" viewBox=\"0 0 19 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M18.0388 6.26446C17.9756 6.27315 17.9132 6.28326 17.844 6.28326C17.7987 6.28326 17.759 6.27404 17.7163 6.27049V21.9656C17.7163 22.5261 17.2606 22.9827 16.6991 22.9827H2.03443C1.47337 22.9827 1.0173 22.5259 1.0173 21.9656L1.01713 2.0445C1.01713 1.48345 1.47337 1.02738 2.03425 1.02738H13.4875C13.1554 0.796421 12.9835 0.407422 12.9718 0.0102539H2.03448C0.913043 0.0102539 0 0.922751 0 2.04473V21.9654C0 23.0868 0.912997 23.9998 2.03448 23.9998H16.6992C17.8217 23.9998 18.7337 23.0868 18.7337 21.9654V6.66126C18.433 6.60928 18.2015 6.46382 18.0388 6.26444L18.0388 6.26446Z\" fill=\"black\" fill-opacity=\"0.56\"/>\r\n              <path d=\"M18.2244 7.18387C18.2225 7.18387 18.2184 7.1844 18.2138 7.18387H13.0383C12.752 7.18387 12.5205 6.95593 12.5205 6.67531V0.508893C12.5205 0.294251 12.6578 0.103028 12.8632 0.0303019C13.0677 -0.0429604 13.298 0.0196583 13.4374 0.185341L18.5603 6.28818C18.6722 6.38184 18.7419 6.52056 18.7419 6.67578C18.7423 6.95605 18.511 7.18384 18.2245 7.18384L18.2244 7.18387ZM13.5561 6.16675H17.1169L13.5561 1.92505V6.16675Z\" fill=\"black\" fill-opacity=\"0.56\"/>\r\n              <path d=\"M14.0565 15.8832H4.67678C3.5548 15.8832 2.6423 14.9707 2.6423 13.8488V11.115C2.6423 9.99306 3.5548 9.08057 4.67678 9.08057H14.0561C15.178 9.08057 16.0905 9.99306 16.0905 11.115V13.8488C16.0909 14.9707 15.1786 15.8832 14.0566 15.8832H14.0565ZM4.67678 10.0978C4.11572 10.0978 3.65966 10.5541 3.65966 11.115V13.8487C3.65966 14.4097 4.1159 14.8658 4.67678 14.8658H14.0561C14.6171 14.8658 15.0732 14.4096 15.0732 13.8487V11.115C15.0732 10.5539 14.6169 10.0978 14.0561 10.0978H4.67678Z\" fill=\"black\" fill-opacity=\"0.56\"/>\r\n              <path d=\"M6.27289 10.814C6.50793 10.814 6.70927 10.8421 6.87813 10.8979C7.04647 10.9535 7.18537 11.0301 7.29411 11.1278C7.40338 11.2256 7.48374 11.3403 7.53625 11.4732C7.58804 11.6059 7.61359 11.7494 7.61359 11.9036C7.61359 12.0699 7.58662 12.2225 7.53376 12.3612C7.48037 12.5001 7.39841 12.6197 7.28914 12.7183C7.17988 12.8169 7.03991 12.8948 6.87157 12.9501C6.70323 13.006 6.50331 13.034 6.27287 13.034H5.87002V14.1484H5.09644V10.8135H6.27286L6.27289 10.814ZM6.27289 12.4506C6.47423 12.4506 6.61933 12.4024 6.70767 12.3067C6.79619 12.2106 6.84036 12.0758 6.84036 11.9039C6.84036 11.8276 6.82918 11.7579 6.8063 11.6953C6.78342 11.6327 6.74883 11.5787 6.70199 11.534C6.65516 11.4893 6.59662 11.4542 6.52549 11.4297C6.45436 11.4053 6.37045 11.3932 6.27271 11.3932H5.86986V12.4506L6.27289 12.4506Z\" fill=\"black\" fill-opacity=\"0.56\"/>\r\n              <path d=\"M11.0337 12.4812C11.0337 12.7223 10.992 12.9445 10.9086 13.1485C10.8258 13.352 10.7082 13.5285 10.5577 13.6775C10.4066 13.826 10.2251 13.942 10.0119 14.0253C9.79885 14.1087 9.56274 14.1499 9.30338 14.1499H8.00739V10.8149H9.30338C9.56272 10.8149 9.79882 10.8572 10.0119 10.9411C10.2249 11.025 10.4066 11.141 10.5577 11.2889C10.7089 11.4369 10.8258 11.6128 10.9086 11.8163C10.992 12.0203 11.0337 12.2415 11.0337 12.4812V12.4812ZM10.2413 12.4812C10.2413 12.3164 10.22 12.1674 10.1772 12.0347C10.1345 11.902 10.0729 11.7896 9.99312 11.697C9.91329 11.6044 9.81466 11.5338 9.69918 11.4845C9.5837 11.4351 9.45155 11.4101 9.30343 11.4101H8.78565V13.5549H9.30343C9.45137 13.5549 9.58371 13.5301 9.69918 13.4806C9.81519 13.4313 9.91329 13.36 9.99312 13.2675C10.0729 13.1755 10.1345 13.063 10.1772 12.9303C10.2198 12.7975 10.2413 12.6469 10.2413 12.4812V12.4812Z\" fill=\"black\" fill-opacity=\"0.56\"/>\r\n              <path d=\"M12.27 11.41V12.2548H13.4098V12.8519H12.27V14.1499H11.4924V10.8149H13.6391V11.4101L12.27 11.41Z\" fill=\"black\" fill-opacity=\"0.56\"/>\r\n              </svg>\r\n            </v-btn>\r\n          </v-col> -->\r\n        \r\n        </v-row>\r\n        <div class=\"d-flex justify-center\" style=\"margin-top: 10px\">\r\n          <v-img :src=\"require(`@/assets/images/offers/${kvg_name}.png`)\" max-width=\"100\"></v-img>\r\n        </div>\r\n        <h4 class=\"title text-center mt-5\">{{ card.title }}</h4>\r\n        <ul class=\"text-center\">\r\n          <li>{{ translate('Beginning') }}: {{ card.created_at | moment('DD[.]MM[.]YYYY')}}</li>\r\n          <!-- <li class=\"mt-1\">{{ translate('End') }}: {{ card.end | moment('DD[.]MM[.]YYYY')}}</li> -->\r\n          <li>{{ translate(card.label) }}: {{ card.updated_at | moment('DD[.]MM[.]YYYY')}}</li>\r\n        </ul>\r\n        <v-row no-gutters justify=\"center\" class=\"mt-3\" v-if=\"downloadUrl != undefined && downloadUrl.id\">\r\n          <v-btn @click=\"downloadPdfFile\" color=\"primary\" >{{ translate('Download') }} \r\n            <svg style=\"margin-left: 10px;\" width=\"16\" height=\"19\" viewBox=\"0 0 16 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M10.5688 7.159L8.46605 9.42109V1H7.72982V9.4224L5.62623 7.15878L5.08684 7.66084L8.09712 10.8986L11.1081 7.66084L10.5688 7.159Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.4\"/>\r\n                <path d=\"M15.1949 18.7483H1V4.5542H5.60822V5.29044H1.73606V18.0121H14.4586V5.29044H10.5869V4.5542H15.1947L15.1949 18.7483Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.4\"/>\r\n              </svg>\r\n          </v-btn>\r\n        </v-row>\r\n      </v-card>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n    \r\n<script>\r\nimport Vue from 'vue';\r\nimport * as LANGUAGE from '../../store/language.json';\r\nimport SnackBar from '../Snackbar/SnackBar.vue';\r\n\r\nVue.use(require(\"vue-moment\"));\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"ApplicationTab\",\r\n  data() {\r\n    return {\r\n      snackbar: {\r\n      show: false,\r\n      message: null,\r\n      color: null,\r\n      },\r\n      items: [\r\n        {\r\n          text: 'Pending',\r\n          value: 1,\r\n        },\r\n        {\r\n          text: 'Accepted',\r\n          value: 2,\r\n        },\r\n        {\r\n          text: 'Commissioned',\r\n          value: 5,\r\n        },\r\n        {\r\n          text: 'Archived',\r\n          value: 4,\r\n        },\r\n        {\r\n          text: 'Declined',\r\n          value: 3,\r\n        },\r\n      ],\r\n      application_status: '',\r\n      cards: [],\r\n      application_status_data: [],\r\n      downloadUrl: null,\r\n      default_status: null,\r\n      insurances: [],\r\n      kvg_name: null\r\n    };\r\n  },\r\n\r\n  components: {SnackBar},\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      if(!word) return word;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    getCustomerApplications(){\r\n      axios.get('mandate/customer/' + this.$router.currentRoute.params.client_id).then(response => {\r\n        this.cards = [];\r\n\r\n        console.log(\"-----\", response.data);\r\n\r\n          for (let $i = 0; response.data.data.length > 0; $i++) {\r\n\r\n            let newData = response.data.data[$i];\r\n\r\n            if (response.data.data[$i].status == 'Pending') {\r\n              newData.color = 'pending'\r\n              newData.label = response.data.data[$i].status\r\n              newData.class = 'pending'\r\n              newData.icon = 'mdi-timer-sand-complete'\r\n              this.default_status = 1;\r\n            }\r\n\r\n            if (response.data.data[$i].status == 'Mandate added') {\r\n              newData.color = 'success'\r\n              newData.label = response.data.data[$i].status\r\n              newData.class = 'accepted'\r\n              newData.icon = 'mdi-check'\r\n              this.default_status = 2;\r\n            }\r\n\r\n            if (response.data.data[$i].status == 'Declined') {\r\n              newData.color = 'error'\r\n              newData.label = response.data.data[$i].status\r\n              newData.class = 'declined'\r\n              newData.icon = 'mdi-close'\r\n              this.default_status = 3;\r\n            }\r\n\r\n            if (response.data.data[$i].status == 'Archived') {\r\n              newData.color = 'grey'\r\n              newData.label = response.data.data[$i].status\r\n              newData.class = 'archived'\r\n              newData.icon = 'mdi-check'\r\n              this.default_status = 5;\r\n            }\r\n\r\n            if (response.data.data[$i].status == 'Commissioned') {\r\n              newData.color = 'primary'\r\n              newData.label = response.data.data[$i].status\r\n              newData.class = 'commissioned'\r\n              newData.icon = 'mdi-timer-sand-complete'\r\n              this.default_status = 4;\r\n            }\r\n\r\n            this.cards.push(newData)\r\n          }\r\n        \r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    },\r\n\r\n    getInsurances() {\r\n      axios\r\n            .get('/customer/' + this.$router.currentRoute.params.client_id)\r\n            .then(res => {\r\n              const {vvg_id} = res.data.data;\r\n\r\n              axios\r\n                  .get('/insurances')\r\n                  .then(response => {\r\n                    const insurances = response.data.data;\r\n\r\n                    this.kvg_name = insurances.find(i => i.id == vvg_id).name.toLowerCase();\r\n                  })\r\n                  .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n      \r\n    },\r\n\r\n    getSingleLogo(id) {\r\n      return this.insurances.find(ins => ins.id == id).name;\r\n    },\r\n\r\n    updateCustomerMandateStatus(status_id) {\r\n      axios\r\n          .get('/mandate/update_status' + this.$router.currentRoute.params.client_id, {\r\n            params: {\r\n              status_id: status_id\r\n            }\r\n          })\r\n          .then((response) => {\r\n            console.log(response)\r\n          })\r\n          .catch((error) => {console.log(error)})\r\n    },\r\n\r\n    updateStatus(application_id, event){\r\n      axios\r\n          .post('/mandate/update_status/' + application_id, {\r\n            status_id: event\r\n          })\r\n          .then(() => {\r\n            this.snackbar = {\r\n              message: \"Data updated successfully\",\r\n              color: \"success\",\r\n              error: false,\r\n            };\r\n\r\n            this.$refs.snackbar.toggleSnackbar(true);\r\n\r\n            this.getCustomerApplications();\r\n            this.default_status = event;\r\n            // window.location.reload();\r\n          })\r\n          .catch((error) => {console.log(error)})\r\n    },\r\n\r\n    getApplicationsStatuses() {\r\n      axios\r\n        .get(\"/mandate/statuses\")\r\n        .then((response) => {\r\n          for (let $i = 0; response.data.data.length > 0; $i++) {\r\n            this.application_status_data.push({\r\n              text: this.translate(response.data.data[$i].name),\r\n              value: response.data.data[$i].id,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    async downloadPdfFile(){\r\n      axios\r\n          .get('download_internal?id=' + this.downloadUrl.id, { responseType: 'blob' })\r\n          .then(res =>  {\r\n              const file = window.URL.createObjectURL(res.data);\r\n              let documentUrl = document.createElement('a');\r\n\r\n              documentUrl.href = file;\r\n              documentUrl.download = (this.downloadUrl.filename);\r\n              document.body.appendChild(documentUrl);\r\n              documentUrl.click();\r\n\r\n              documentUrl.remove();\r\n              window.URL.revokeObjectURL(file);\r\n          })\r\n          .catch(err => console.log(err));\r\n    },\r\n\r\n    async getDownloadUrl() {\r\n      axios\r\n          .get('/internal_documents?category=mandate_tab&customer_id=' + this.$router.currentRoute.params.client_id)\r\n          .then(response => {\r\n            this.downloadUrl = response.data.data[0];\r\n          }).catch(err => console.log(err));\r\n    }\r\n  },\r\n\r\n  async mounted() {\r\n    this.getCustomerApplications();\r\n    this.getApplicationsStatuses();\r\n    this.getDownloadUrl();\r\n    this.getInsurances();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.title,\r\n.subtitle {\r\n  color: #36a5dd;\r\n  margin: 10px 0 15px 0;\r\n}\r\n\r\n.card {\r\n  border: solid 1px #ecf1f6;\r\n}\r\n\r\nli {\r\n  list-style: none;\r\n}\r\n\r\n.v-application ul,\r\n.v-application ol {\r\n  padding-left: unset;\r\n}\r\n\r\n.application-card.accepted {\r\n  padding: 35px;\r\n  border-radius: 20px !important;\r\n  border-bottom: solid 10px green;\r\n}\r\n.application-card.pending {\r\n  border-radius: 20px !important;\r\n  border-bottom: solid 10px orange;\r\n}\r\n.application-card.declined {\r\n  border-radius: 20px !important;\r\n  border-bottom: solid 10px red;\r\n}\r\n.application-card.archived {\r\n  border-radius: 20px !important;\r\n  border-bottom: solid 10px grey;\r\n}\r\n.application-card.commissioned {\r\n  border-radius: 20px !important;\r\n  border-bottom: solid 10px #36a5dd;\r\n}\r\n\r\ndiv.application-status {\r\n  margin-top: -30px;\r\n  border-radius: 50px;\r\n  width: 40px;\r\n  height: 40px;\r\n  text-align: center;\r\n}\r\n\r\n.application-status.accepted {\r\n  background: green !important;\r\n}\r\n\r\n.application-status.pending {\r\n  background: orange !important;\r\n}\r\n\r\n.application-status.declined {\r\n  background: red !important;\r\n}\r\n\r\n.application-status.archived {\r\n  background: grey !important;\r\n}\r\n\r\n.application-status.commissioned {\r\n  background: #36a5dd !important;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}