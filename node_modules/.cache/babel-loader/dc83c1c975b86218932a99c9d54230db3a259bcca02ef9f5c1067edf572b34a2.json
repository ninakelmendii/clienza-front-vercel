{"ast":null,"code":"import Vue from 'vue';\nimport * as LANGUAGE from '../../store/language.json';\nVue.use(require(\"vue-moment\"));\nimport axios from \"axios\";\nexport default {\n  name: \"UserCard\",\n  data() {\n    return {\n      user: [],\n      data: [],\n      url: \"https://api.weatherapi.com/v1/forecast.json?key=382ac42fa29242fdb8e161623211112&q=Schindellegi&days=3&aqi=no&alerts=no\"\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    getWeatherData() {\n      axios.get(this.url).then(response => {\n        console.log(response.data);\n        this.data = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getDayFromDate(date) {\n      const day = new Date(date).getDay();\n      let dayLabel = '';\n      switch (day) {\n        case 0:\n          dayLabel = 'Monday';\n          break;\n        case 1:\n          dayLabel = 'Tuesday';\n          break;\n        case 2:\n          dayLabel = 'Wednesday';\n          break;\n        case 3:\n          dayLabel = 'Thursday';\n          break;\n        case 4:\n          dayLabel = 'Friday';\n          break;\n        case 5:\n          dayLabel = 'Saturday';\n          break;\n        default:\n          dayLabel = 'Sunday';\n          break;\n      }\n      return dayLabel;\n    }\n  },\n  mounted() {\n    this.user = JSON.parse(this.$store.state.user);\n    this.getWeatherData();\n  },\n  watch: {\n    data(newData) {\n      console.log(newData);\n    }\n  }\n};","map":{"version":3,"names":["Vue","LANGUAGE","use","require","axios","name","data","user","url","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","getWeatherData","get","then","response","console","log","catch","error","getDayFromDate","date","day","Date","getDay","dayLabel","mounted","JSON","parse","watch","newData"],"sources":["src/components/Dashboard/UserCard.vue"],"sourcesContent":["<template>\r\n  <v-row>\r\n    <v-col class=\"d-flex w-full h-full\">\r\n      <v-card outlined rounded class=\"user-card w-full\">\r\n        <v-list-item three-line>\r\n          <v-row>\r\n            <v-col>\r\n              <v-list-item-content>\r\n                <v-list-item-title class=\"text-h5 mb-1\">\r\n                  {{ translate('Hello') }} {{ user.first_name }}\r\n                </v-list-item-title>\r\n              </v-list-item-content>\r\n              <v-list-item-title class=\"text-p mb-1 weather weather-text\">\r\n                <span\r\n                  >{{\r\n                    data.location.name\r\n                  }}\r\n                  </span>\r\n\r\n              </v-list-item-title>\r\n            </v-col>\r\n            <v-col class=\"d-flex align-center justify-center\">\r\n              <v-avatar class=\"avatar-circle\" size=\"85\" @click=\"$router.push('/profile')\"\r\n                ><img class=\"pa-1\" :src=\"$store.state.profileImage.img_path || require('@/assets/images/guest_profile_pic.png')\" style=\"object-fit: contain;\"\r\n              />\r\n            </v-avatar>\r\n            </v-col>\r\n          </v-row>\r\n        </v-list-item>\r\n\r\n        <v-col class=\"mt-8\">\r\n          <v-row justify=\"space-between\" class=\"weather-container\">\r\n              <div class=\"text-p mb-1\">\r\n                <p>{{ translate('Today') }}</p>\r\n                <v-row class=\"align-center\" no-gutters>\r\n                  <img :src=\"data.current.condition.icon\" height=\"30\" />\r\n                  <span class=\"temperature\">{{ data.current.temp_c }}°</span>\r\n                </v-row>\r\n              </div>\r\n\r\n              <div class=\"text-p mb-1\">\r\n                <p>{{ translate('Tomorrow') }}</p>\r\n                <v-row class=\"align-center\" no-gutters>\r\n                  <img\r\n                  :src=\"data.forecast.forecastday[1].day.condition.icon\"\r\n                  height=\"30\"\r\n                  />\r\n                  <span class=\"temperature\"\r\n                    >{{ data.forecast.forecastday[1].day.maxtemp_c }}°</span\r\n                  >\r\n                </v-row>\r\n              </div>\r\n\r\n              <div class=\"text-p mb-1\">\r\n                <p>{{translate(getDayFromDate(data.forecast.forecastday[1].date))}}</p>\r\n                <v-row class=\"align-center\" no-gutters>\r\n                  <img\r\n                  :src=\"data.forecast.forecastday[2].day.condition.icon\"\r\n                  height=\"30\"\r\n                  />\r\n                  <span class=\"temperature\"\r\n                    >{{ data.forecast.forecastday[2].day.maxtemp_c }}°</span\r\n                  >\r\n                </v-row>\r\n              </div>\r\n          </v-row>\r\n        </v-col>\r\n      </v-card>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue';\r\nimport * as LANGUAGE from '../../store/language.json';\r\n\r\nVue.use(require(\"vue-moment\"));\r\n\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"UserCard\",\r\n\r\n  data() {\r\n    return {\r\n      user: [],\r\n      data: [],\r\n      url: \"https://api.weatherapi.com/v1/forecast.json?key=382ac42fa29242fdb8e161623211112&q=Schindellegi&days=3&aqi=no&alerts=no\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    getWeatherData() {\r\n      axios\r\n        .get(this.url)\r\n        .then((response) => {\r\n          console.log(response.data)\r\n          this.data = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    getDayFromDate(date){\r\n      const day = new Date(date).getDay();\r\n      let dayLabel = '';\r\n\r\n      switch (day) {\r\n        case 0:\r\n          dayLabel = 'Monday';\r\n          break;\r\n        case 1:\r\n          dayLabel = 'Tuesday';\r\n          break;\r\n        case 2:\r\n          dayLabel = 'Wednesday';\r\n          break;\r\n        case 3:\r\n          dayLabel = 'Thursday';\r\n          break;\r\n        case 4:\r\n          dayLabel = 'Friday';\r\n          break;\r\n        case 5:\r\n          dayLabel = 'Saturday'\r\n          break;\r\n        default:\r\n          dayLabel = 'Sunday';\r\n          break;\r\n      }\r\n\r\n      return dayLabel;\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.user = JSON.parse(this.$store.state.user);\r\n    this.getWeatherData();\r\n  },\r\n\r\n  watch: {\r\n    data(newData) {\r\n      console.log(newData);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.theme--light.weather {\r\n  background: #f4f4fc;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n}\r\n\r\n.theme--dark.weather {\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n}\r\n\r\n.temperature {\r\n  font-weight: bold;\r\n  padding: 10px;\r\n  font-size: 17px;\r\n}\r\n\r\n.user-card {\r\n  padding: 30px;\r\n  border-radius: 10px !important;\r\n  border: none;\r\n}\r\n\r\n.theme--light .weather-text {\r\n  background: #f4f4fc;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.theme--dark .weather-text {\r\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  background: rgba(0, 0, 0, 0.25);\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.v-application .text-h5, .v-list-item__title.text-h4.mb-1  {\r\n    font-family: \"PT Sans\", sans-serif !important;\r\n}\r\n\r\n.v-list-item {\r\n  padding: 0;\r\n}\r\n\r\n.avatar-circle{\r\n  border: 1px solid #DFE0EB;\r\n}\r\n\r\n.w-full {\r\n  width: 100%;\r\n}\r\n\r\n</style>"],"mappings":"AAyEA,OAAAA,GAAA;AACA,YAAAC,QAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,OAAA;AAEA,OAAAC,KAAA;AACA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,IAAA;MACAD,IAAA;MACAE,GAAA;IACA;EACA;EAEAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAX,QAAA,CAAAY,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAAnB,QAAA,CAAAW,SAAA,EAAAS,MAAA;MACA;QACA,OAAApB,QAAA,CAAAW,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,eAAA;MACAlB,KAAA,CACAmB,GAAA,MAAAf,GAAA,EACAgB,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAnB,IAAA;QACA,KAAAA,IAAA,GAAAmB,QAAA,CAAAnB,IAAA;MACA,GACAsB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA;MACA;IACA;IACAC,eAAAC,IAAA;MACA,MAAAC,GAAA,OAAAC,IAAA,CAAAF,IAAA,EAAAG,MAAA;MACA,IAAAC,QAAA;MAEA,QAAAH,GAAA;QACA;UACAG,QAAA;UACA;QACA;UACAA,QAAA;UACA;QACA;UACAA,QAAA;UACA;QACA;UACAA,QAAA;UACA;QACA;UACAA,QAAA;UACA;QACA;UACAA,QAAA;UACA;QACA;UACAA,QAAA;UACA;MACA;MAEA,OAAAA,QAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAA7B,IAAA,GAAA8B,IAAA,CAAAC,KAAA,MAAApB,MAAA,CAAAC,KAAA,CAAAZ,IAAA;IACA,KAAAe,cAAA;EACA;EAEAiB,KAAA;IACAjC,KAAAkC,OAAA;MACAd,OAAA,CAAAC,GAAA,CAAAa,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}