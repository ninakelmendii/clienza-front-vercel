{"ast":null,"code":"import axios from 'axios';\nimport * as LANGUAGE from '../../../store/language.json';\nexport default {\n  name: 'ConsulationProtocol',\n  data() {\n    return {\n      protocols: null\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    getProtocolTermin(protocol) {\n      const {\n        protocol_info\n      } = protocol;\n      const parsedInfo = JSON.parse(JSON.parse(protocol_info));\n      return parsedInfo[5].datum;\n    },\n    getProtocol() {\n      axios.get('/protocol?lead_id=' + this.$router.currentRoute.params.id).then(res => this.protocols = res.data.protocols).catch(err => console.log(err));\n    }\n  },\n  created() {\n    this.getProtocol();\n  }\n};","map":{"version":3,"names":["axios","LANGUAGE","name","data","protocols","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","getProtocolTermin","protocol","protocol_info","parsedInfo","JSON","parse","datum","getProtocol","get","$router","currentRoute","params","id","then","res","catch","err","console","log","created"],"sources":["src/components/Leads/LeadDetails/ConsulationProtocolTab.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <v-btn color=\"#36a5dd\" style=\"color: white\" v-if=\"protocols == null\">{{ translate('Loading') }}</v-btn>\r\n        <div v-else>\r\n            <v-row>\r\n                <v-col col=\"12\" md=\"4\" v-for=\"protocol in protocols\" :key=\"protocol.id\" style=\"cursor: pointer;\" @click=\"$router.push('/steps/'+$router.currentRoute.params.id+'/'+protocol.id)\">\r\n                    <div style=\"margin: auto; display: flex; flex-direction: column; border-radius: 20px; overflow: hidden;\">\r\n                        <img src=\"@/assets/images/thumbnails/protokol.jpg\" alt=\"protocol\" style=\" object-fit: center;\">\r\n                        <div style=\"background-color: white; text-align: center; padding: 5px\">\r\n                            {{ translate('Created date') }} {{ protocol.created_at | moment(\"DD.MM.YYYY HH:mm\") }}\r\n                            <!-- Termin {{ getProtocolTermin(protocol) }} -->\r\n                        </div>\r\n                        <v-btn @click=\"$router.push('/steps/'+$router.currentRoute.params.id+'/'+protocol.id)\" color=\"#36a5dd\" style=\"color: white\">{{ translate('Edit') }}</v-btn>\r\n                    </div>\r\n                </v-col>\r\n                <v-col col=\"12\" md=\"4\" style=\"cursor: pointer; padding: 12px; min-height: 200px;\" @click=\"$router.push('/steps/'+$router.currentRoute.params.id+'/'+null)\">\r\n                    <div style=\"display: flex; justify-content: center; align-items: center; height: 100%; flex-direction:column;border: 1px dashed black; border-radius: 20px;\">\r\n                        <v-icon>mdi-plus</v-icon>\r\n                        <h3>{{ translate('Add new') }}</h3>\r\n                        <!-- <v-btn @click=\"$router.push('/steps/'+$router.currentRoute.params.id)\" color=\"#36a5dd\" style=\"color: white\">{{ translate('Edit') }}</v-btn> -->\r\n                    </div>\r\n                </v-col>\r\n            </v-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    import * as LANGUAGE from '../../../store/language.json';\r\n\r\n    export default {\r\n        name: 'ConsulationProtocol',\r\n        data(){return {\r\n            protocols: null\r\n        }},\r\n        methods: {\r\n            translate(word) {\r\n                let wordIndex = null;\r\n\r\n                LANGUAGE.forEach((lng, index) => {\r\n                    if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n                    wordIndex = index;\r\n                    }\r\n                });\r\n\r\n                if(wordIndex === null) {\r\n                    return word;\r\n                }\r\n\r\n                if(this.$store.state.language == 'german') {\r\n                    return LANGUAGE[wordIndex].german;\r\n                } else {\r\n                    return LANGUAGE[wordIndex].english;\r\n                }\r\n            },\r\n            getProtocolTermin(protocol) {\r\n                const { protocol_info }  = protocol;\r\n                const parsedInfo = JSON.parse(JSON.parse(protocol_info));\r\n\r\n                return parsedInfo[5].datum\r\n            },\r\n            getProtocol(){\r\n                axios\r\n                    .get('/protocol?lead_id=' + this.$router.currentRoute.params.id)\r\n                    .then(res => this.protocols = res.data.protocols)\r\n                    .catch(err => console.log(err));\r\n            } \r\n        },\r\n        created() {\r\n            this.getProtocol();\r\n        }\r\n    }\r\n</script>"],"mappings":"AA6BA,OAAAA,KAAA;AACA,YAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IAAA;MACAC,SAAA;IACA;EAAA;EACAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAP,QAAA,CAAAQ,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAAf,QAAA,CAAAO,SAAA,EAAAS,MAAA;MACA;QACA,OAAAhB,QAAA,CAAAO,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,kBAAAC,QAAA;MACA;QAAAC;MAAA,IAAAD,QAAA;MACA,MAAAE,UAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAC,KAAA,CAAAH,aAAA;MAEA,OAAAC,UAAA,IAAAG,KAAA;IACA;IACAC,YAAA;MACAzB,KAAA,CACA0B,GAAA,6BAAAC,OAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,EAAA,EACAC,IAAA,CAAAC,GAAA,SAAA5B,SAAA,GAAA4B,GAAA,CAAA7B,IAAA,CAAAC,SAAA,EACA6B,KAAA,CAAAC,GAAA,IAAAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAZ,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}