{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport UploadTaskFiles from '@/assets/services/UploadTaskFiles.vue';\nimport axios from \"axios\";\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from '../Snackbar/SnackBar.vue';\nexport default {\n  data() {\n    return {\n      calendar_date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      calendar_menu: false,\n      lead_calendar: null,\n      datepickermenu: false,\n      hour: null,\n      minute: null,\n      hourRules: [v => v != '' || 'Field is required!', v => v >= 0 || '0 is the minimum', v => v < 25 || 'Value should be smaller than 24'],\n      minuteRules: [v => v != '' || 'Field is required!', v => v >= 0 || '0 is the minimum', v => v < 60 || 'Value should be smaller than 60'],\n      isCreateMode: true,\n      client_type: 'actual',\n      snackbar: {\n        show: false,\n        message: null,\n        color: null\n      },\n      isAdmin: false,\n      items: [],\n      status: \"\",\n      type: \"\",\n      activePicker: null,\n      provisionsanfrag: \"\",\n      dialog: false,\n      dialogDelete: false,\n      search_string: \"\",\n      loading: true,\n      headers: [{\n        text: \"#\",\n        align: \"start\",\n        value: \"id\"\n      }, {\n        text: this.translate(\"Date\"),\n        value: \"date\",\n        width: \"180px\"\n      }, {\n        text: this.translate(\"Task Name\"),\n        value: \"name\"\n      }, {\n        text: this.translate(\"Note\"),\n        value: \"note\"\n      }, {\n        text: this.translate(\"Actions\"),\n        value: \"actions\"\n      }],\n      data: [],\n      options: {},\n      totalTaskTable: 0,\n      create_task_data: {\n        customer_id: \"\",\n        type: \"\",\n        name: \"\",\n        date: \"\",\n        place_id: \"\",\n        note: \"\",\n        agent_id: \"\",\n        new_client: \"\"\n        // attachments: \"\",\n        // created_by: \"\",\n      },\n\n      get_task_data: [],\n      customer_list_select: [],\n      canton_select: [],\n      task_type_select: [],\n      deleteTaskId: 0,\n      updateCustomerId: 0,\n      tasks: [],\n      editedIndex: -1,\n      editedItem: {\n        customer_id: \"\",\n        type: \"\",\n        name: \"\",\n        date: \"\",\n        place_id: \"\",\n        note: \"\"\n        // attachments: \"\",\n        // created_by: \"\",\n      },\n\n      defaultItem: {\n        customer_id: \"1\",\n        type: \"\",\n        name: \"\",\n        date: \"\",\n        place_id: \"\",\n        note: \"\"\n        // attachments: \"\",\n        // created_by: \"\",\n      },\n\n      get_agents_list: [],\n      showCompleted: '',\n      start_date_filter: '',\n      end_date_filter: ''\n    };\n  },\n  computed: {\n    formTitle() {\n      return this.isCreateMode === true ? \"Add Task\" : \"Edit Task\";\n    },\n    formated_date() {\n      if (!this.calendar_date) return null;\n      const [year, month, day] = this.calendar_date.split('-');\n      return `${day}.${month}.${year}`;\n    }\n  },\n  watch: {\n    client_type(val) {\n      if (val != 'actual') {\n        this.create_task_data.customer_id = 0;\n      } else {\n        this.create_task_data.new_client = \"\";\n      }\n    },\n    hour(newHour) {\n      // Pad the hour with a leading zero if it's a single-digit number\n      if (newHour.length === 1) {\n        this.hour = '0' + newHour;\n      }\n    },\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n    options: {\n      handler() {\n        this.getTasksDatatable();\n      },\n      deep: true\n    },\n    search_string: {\n      handler() {\n        this.getTasksDatatable();\n      },\n      deep: true\n    },\n    status: {\n      handler() {\n        this.getTasksDatatable();\n      },\n      deep: true\n    },\n    showCompleted(val) {\n      if (val) {\n        this.status = 2;\n      } else {\n        this.status = \"\";\n      }\n      this.getTasksDatatable();\n    },\n    calendar_date(val) {\n      let splitDate = val.toString().split(\",\");\n      this.start_date_filter = splitDate[0];\n      this.end_date_filter = splitDate[1];\n      this.getTasksDatatable();\n    },\n    menu(val) {\n      val && setTimeout(() => this.activePicker = \"YEAR\");\n    }\n  },\n  created() {\n    this.getTaskTypes();\n  },\n  mounted() {\n    this.getTasksDatatable();\n    this.getCantonSelect();\n    this.getCustomerList();\n    this.getAgentsList();\n    if (this.$helperPlugin.ifAdmin()) {\n      this.isAdmin = true;\n    }\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    getAgentsList() {\n      axios.get(\"/admin/agent\").then(response => {\n        for (let $i = 0; response.data.length > 0; $i++) {\n          this.get_agents_list.push({\n            text: response.data[$i].first_name + ' ' + response.data[$i].last_name,\n            value: response.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getCantonSelect() {\n      axios.get(\"/canton\").then(response => {\n        for (let $i = 0; response.data.length > 0; $i++) {\n          this.canton_select.push({\n            text: response.data[$i].name,\n            value: response.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getCustomerList() {\n      axios.get(\"/customer\").then(response => {\n        for (let $i = 0; response.data.length > 0; $i++) {\n          this.customer_list_select.push({\n            text: response.data[$i].first_name + ' ' + response.data[$i].last_name,\n            value: response.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    saveDate(date) {\n      this.$refs.menu.save(date);\n    },\n    getTasksDatatable() {\n      this.loading = true;\n      const {\n        sortBy,\n        sortDesc,\n        page,\n        itemsPerPage\n      } = this.options;\n      let sortType;\n      sortType = \"asc\";\n      if (sortDesc[0]) {\n        sortType = \"desc\";\n      }\n      axios.get(\"/task/datatable?term=\" + this.search_string + \"&type=\" + this.status + \"&start_date=\" + this.start_date_filter + \"&end_date=\" + this.end_date_filter, {\n        params: {\n          sort_by: sortBy[0],\n          sort: sortType,\n          page: page,\n          per_page: itemsPerPage\n        }\n      }).then(response => {\n        this.tasks = response.data.data;\n        this.totalTaskTable = response.data.total;\n        this.loading = false;\n        this.$nextTick(() => {\n          const currentEl = this.$el.querySelector(\".v-data-footer__pagination\");\n          const translated = currentEl.innerHTML.replace(\"of\", this.translate(\"of\"));\n          currentEl.innerHTML = translated;\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    createTask() {\n      const {\n        customer_id,\n        type,\n        name,\n        date,\n        place_id,\n        note,\n        agent_id,\n        new_client\n      } = this.create_task_data;\n\n      // var _date = new Date(`${date} ${this.hour}:${this.minute}`);\n      // var offset = 1; // CET is 1 hour ahead of UTC\n      // var utc = _date.getTime() + (_date.getTimezoneOffset() * 60000);\n      // var cet = new Date(utc + (3600000*offset));\n\n      const hourInt = parseInt(this.hour, 10);\n      const minuteInt = parseInt(this.minute, 10);\n      const dt = new Date(`${date}T00:00:00Z`);\n      dt.setUTCHours(hourInt);\n      dt.setUTCMinutes(minuteInt);\n      axios.post(\"/task\", {\n        customer_id,\n        type,\n        name,\n        date: dt,\n        place_id,\n        note,\n        agent_id,\n        new_client\n      }).then(() => {\n        this.create_task_data = {};\n        this.snackbar = {\n          message: \"Data updated successfully\",\n          error: false\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getTask(task_id) {\n      axios.get(\"/task/\" + task_id).then(response => {\n        this.create_task_data = {};\n        this.get_task_data.push(response.data.data);\n        this.create_task_data.customer_id = parseInt(response.data.data.customer_id);\n        this.create_task_data.type = parseInt(response.data.data.type);\n        this.create_task_data.name = response.data.data.name;\n        this.create_task_data.date = response.data.data.date;\n        this.create_task_data.place_id = parseInt(response.data.data.place_id);\n        this.create_task_data.agent_id = parseInt(response.data.data.agent_id);\n        this.create_task_data.note = response.data.data.note;\n        this.create_task_data.created_by = response.data.data.created_by;\n        this.create_task_data.new_client = response.data.data.new_client;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    updateTask(task_id) {\n      axios.put(\"/task/\" + task_id, this.create_task_data).then(response => {\n        this.snackbar = {\n          message: response.data.message,\n          color: \"success\",\n          error: false\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    deleteTask(task_id) {\n      axios.delete(\"/task/\" + task_id).then(response => {\n        this.snackbar = {\n          message: response.data.message,\n          color: \"success\",\n          error: false\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    updateTaskStatus(task_id) {\n      axios.put(\"/task/complete/\" + task_id, {\n        complete: \"1\"\n      }).then(response => {\n        alert(response.data.message);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getTaskTypes() {\n      axios.get(\"/tasktype\").then(response => {\n        for (let $i = 0; response.data.length > 0; $i++) {\n          this.task_type_select.push({\n            text: this.translate(response.data[$i].name),\n            value: response.data[$i].id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    openDialog() {\n      this.create_task_data = this.defaultItem;\n      this.isCreateMode = true;\n      this.dialog = true;\n    },\n    editTask(item) {\n      this.isCreateMode = false;\n      this.getTask(item.id);\n      this.updateTaskId = item.id;\n      this.dialog = true;\n    },\n    deleteTaskModal(item) {\n      this.deleteTaskId = item.id;\n      this.dialogDelete = true;\n    },\n    deleteTaskModalConfirm() {\n      this.closeDelete();\n      this.deleteTask(this.deleteTaskId);\n      this.getTasksDatatable();\n    },\n    close() {\n      this.dialog = false;\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n    },\n    save() {\n      this.close();\n      this.createTask();\n      this.getTasksDatatable();\n    },\n    update() {\n      this.close();\n      this.updateTask(this.updateTaskId);\n      this.getTasksDatatable();\n    }\n  },\n  components: {\n    UploadTaskFiles,\n    SnackBar\n  }\n};","map":{"version":3,"names":["UploadTaskFiles","axios","LANGUAGE","SnackBar","data","calendar_date","Date","now","getTimezoneOffset","toISOString","substr","calendar_menu","lead_calendar","datepickermenu","hour","minute","hourRules","v","minuteRules","isCreateMode","client_type","snackbar","show","message","color","isAdmin","items","status","type","activePicker","provisionsanfrag","dialog","dialogDelete","search_string","loading","headers","text","align","value","translate","width","options","totalTaskTable","create_task_data","customer_id","name","date","place_id","note","agent_id","new_client","get_task_data","customer_list_select","canton_select","task_type_select","deleteTaskId","updateCustomerId","tasks","editedIndex","editedItem","defaultItem","get_agents_list","showCompleted","start_date_filter","end_date_filter","computed","formTitle","formated_date","year","month","day","split","watch","val","newHour","length","close","closeDelete","handler","getTasksDatatable","deep","splitDate","toString","menu","setTimeout","created","getTaskTypes","mounted","getCantonSelect","getCustomerList","getAgentsList","$helperPlugin","ifAdmin","methods","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","get","then","response","$i","push","first_name","last_name","id","catch","error","console","log","saveDate","$refs","save","sortBy","sortDesc","page","itemsPerPage","sortType","params","sort_by","sort","per_page","total","$nextTick","currentEl","$el","querySelector","translated","innerHTML","replace","createTask","hourInt","parseInt","minuteInt","dt","setUTCHours","setUTCMinutes","post","toggleSnackbar","getTask","task_id","created_by","updateTask","put","deleteTask","delete","updateTaskStatus","complete","alert","openDialog","editTask","item","updateTaskId","deleteTaskModal","deleteTaskModalConfirm","update","components"],"sources":["src/components/Tasks/TasksTable.vue"],"sourcesContent":["<template>\r\n  <v-row>\r\n    <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\r\n    <v-col>\r\n      <v-text-field\r\n        v-model=\"search_string\"\r\n        rounded\r\n        filled\r\n        background-color=\"white\"\r\n        :label=\"translate('Search')\"\r\n        prepend-inner-icon=\"mdi-magnify\"\r\n      ></v-text-field>\r\n    </v-col>\r\n\r\n    <v-col>\r\n      <v-menu\r\n        ref=\"menu\"\r\n        v-model=\"menu\"\r\n        :close-on-content-click=\"false\"\r\n        :return-value.sync=\"date\"\r\n        transition=\"scale-transition\"\r\n        offset-y\r\n        min-width=\"auto\"\r\n      >\r\n        <template v-slot:activator=\"{ on, attrs }\">\r\n          <v-text-field\r\n            v-model=\"formated_date\"\r\n            :label=\"translate('Select Date')\"\r\n            prepend-inner-icon=\"mdi-calendar\"\r\n            readonly\r\n            background-color=\"#fff\"\r\n            rounded\r\n            filled\r\n            v-bind=\"attrs\"\r\n            v-on=\"on\"\r\n          ></v-text-field>\r\n        </template>\r\n        <v-date-picker\r\n          v-model=\"calendar_date\"\r\n          no-title\r\n          scrollable\r\n          range\r\n        >\r\n          <v-spacer></v-spacer>\r\n          <v-btn\r\n            text\r\n            color=\"primary\"\r\n            @click=\"menu = false\"\r\n          >\r\n            Cancel\r\n          </v-btn>\r\n          <v-btn\r\n            text\r\n            color=\"primary\"\r\n            @click=\"$refs.menu.save(date)\"\r\n          >\r\n            OK\r\n          </v-btn>\r\n        </v-date-picker>\r\n      </v-menu>\r\n    </v-col>\r\n\r\n    <v-col>\r\n      <v-select\r\n        v-model=\"status\"\r\n        :items=\"task_type_select\"\r\n        rounded\r\n        filled\r\n        background-color=\"white\"\r\n        :label=\"translate('Status')\"\r\n        prepend-inner-icon=\"mdi-filter-multiple-outline\"\r\n      ></v-select>\r\n    </v-col>\r\n\r\n    <v-col cols=\"12\" md=\"12\" lg=\"12\" class=\"d-flex justify-between\">\r\n      <v-row class=\"d-flex justify-start\">\r\n        <v-col cols=\"6\" md=\"6\" lg=\"6\"\r\n        ><v-switch\r\n            v-model=\"showCompleted\"\r\n            inset\r\n            :label=\"translate('Show completed task')\"\r\n        ></v-switch\r\n        ></v-col>\r\n      </v-row>\r\n    </v-col>\r\n\r\n    <v-col cols=\"12\" md=\"12\" lg=\"12\" sm=\"12\">\r\n      <div class=\"d-flex justify-end\">\r\n        <v-btn color=\"primary\" dark class=\"mb-2\" @click=\"openDialog\">\r\n          <v-icon>mdi-plus</v-icon> {{ translate('New Task') }}\r\n        </v-btn>\r\n      </div>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"tasks\"\r\n        :loading=\"loading\"\r\n        :options.sync=\"options\"\r\n        :server-items-length=\"totalTaskTable\"\r\n        :footer-props=\"{'items-per-page-text':translate('Rows per page'), 'items-per-page-all-text':translate('All')}\"\r\n        :search=\"search\"\r\n      >\r\n        <template v-slot:loading>\r\n          {{translate('Loading items')}}...\r\n        </template>\r\n        <template v-slot:no-data>\r\n          {{translate('No data available')}}\r\n        </template>\r\n        <template v-slot:top>\r\n          <v-toolbar flat>\r\n            <v-spacer></v-spacer>\r\n            <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n              <v-card>\r\n                <v-card-title>\r\n                  <span class=\"text-h5\">{{ translate(formTitle) }}</span>\r\n                </v-card-title>\r\n\r\n                <v-card-text>\r\n                  <v-container>\r\n                    <v-row>\r\n                      <v-col cols=\"12\">\r\n                        <v-col cols=\"12\" class=\"p-0\" no-gutters>\r\n                          <label>\r\n                            <input type=\"radio\" v-model=\"client_type\" value=\"actual\">\r\n                            {{ translate('Actual client') }}\r\n                          </label>\r\n                        </v-col>\r\n                        <v-col cols=\"12\" class=\"p-0 mt-2\" no-gutters>\r\n                          <label>\r\n                            <input type=\"radio\" v-model=\"client_type\" value=\"new\">\r\n                            {{ translate('New client') }} <br><small>({{ translate('Customer should be added manually. Click here to add new.') }})</small>\r\n                          </label>\r\n                        </v-col>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"6\">\r\n                        <v-select\r\n                            v-if=\"client_type == 'actual'\"\r\n                            :items=\"customer_list_select\"\r\n                            v-model=\"create_task_data.customer_id\"\r\n                            :label=\"translate('Customer')\"\r\n                        ></v-select>\r\n                        <v-text-field :label=\"translate('Customer')\" v-else v-model=\"create_task_data.new_client\">\r\n                        </v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"6\">\r\n                        <v-select\r\n                          :items=\"task_type_select\"\r\n                          v-model=\"create_task_data.type\"\r\n                          :label=\"translate('Type')\"\r\n                        ></v-select>\r\n                      </v-col>\r\n\r\n                      <v-col cols=\"12\" sm=\"12\" md=\"12\">\r\n                        <v-col>\r\n                          <v-row>\r\n                            <div style=\"width: 50%;\">\r\n                              <!-- <v-menu\r\n                                ref=\"menu\"\r\n                                v-model=\"menu\"\r\n                                :close-on-content-click=\"false\"\r\n                                :return-value.sync=\"lead_calendar\"\r\n                                transition=\"scale-transition\"\r\n                                offset-y\r\n                                min-width=\"auto\"\r\n                              >\r\n                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                  <v-text-field\r\n                                    v-model=\"lead_calendar\"\r\n                                    :label=\"translate('Date')\"\r\n                                    prepend-icon=\"mdi-calendar\"\r\n                                    readonly\r\n                                    v-bind=\"attrs\"\r\n                                    v-on=\"on\"\r\n                                  ></v-text-field>\r\n                                </template>\r\n                                <v-date-picker\r\n                                  v-model=\"lead_calendar\"\r\n                                  :first-day-of-week=\"1\"\r\n                                  no-title\r\n                                  scrollable\r\n                                >\r\n                                  <v-spacer></v-spacer>\r\n                                  <v-btn\r\n                                    text\r\n                                    color=\"primary\"\r\n                                    @click=\"menu = false\"\r\n                                  >\r\n                                    {{ translate('Cancel') }}\r\n                                  </v-btn>\r\n                                  <v-btn\r\n                                    text\r\n                                    color=\"primary\"\r\n                                    @click=\"$refs.menu.save(lead_calendar)\"\r\n                                  >\r\n                                    OK\r\n                                  </v-btn>\r\n                                </v-date-picker>\r\n                              </v-menu> -->\r\n                                <v-menu\r\n                                    v-model=\"datepickermenu\"\r\n                                    :close-on-content-click=\"false\"\r\n                                    :nudge-right=\"40\"\r\n                                    transition=\"scale-transition\"\r\n                                    offset-y\r\n                                    min-width=\"290px\"\r\n                                    >\r\n                                    <template v-slot:activator=\"{ on }\">\r\n                                        <v-text-field\r\n                                        v-model=\"create_task_data.date\"\r\n                                        :label=\"translate('Date')\"\r\n                                        prepend-icon=\"mdi-calendar\"\r\n                                        readonly\r\n                                        v-on=\"on\"\r\n                                        ></v-text-field>\r\n                                    </template>\r\n                                    <v-date-picker\r\n                                        v-model=\"create_task_data.date\"\r\n                                        no-title\r\n                                        scrollable\r\n                                        @input=\"datepickermenu = false\"\r\n                                    ></v-date-picker>\r\n                                </v-menu>\r\n                            </div>\r\n                            <div\r\n                              style=\"width: 50%;  padding: 0 10px;\"\r\n                            >\r\n                              <v-form style=\"display: flex; gap: 10px;\" ref=\"formSchedule\">\r\n                                <v-text-field\r\n                                  v-model=\"hour\"\r\n                                  :label=\"translate('Hour')\"\r\n                                  type=\"number\"\r\n                                  :rules=\"hourRules\"\r\n                                  style=\"width: 50%\"\r\n                                />\r\n                                <v-text-field\r\n                                  v-model=\"minute\"\r\n                                  :label=\"translate('Minutes')\"\r\n                                  type=\"number\"\r\n                                  :rules=\"minuteRules\"\r\n                                  style=\"width: 50%\"\r\n                                />\r\n                              </v-form>\r\n                            </div>\r\n                          </v-row>\r\n                        </v-col>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"12\" md=\"12\">\r\n                        <v-select\r\n                            :items=\"canton_select\"\r\n                            v-model=\"create_task_data.place_id\"\r\n                            :label=\"translate('Place')\"\r\n                        ></v-select>\r\n<!--                        <v-text-field-->\r\n<!--                          v-model=\"create_task_data.place_id\"-->\r\n<!--                          label=\"Place ID\"-->\r\n<!--                        ></v-text-field>-->\r\n                      </v-col>\r\n\r\n                      <template v-if=\"isAdmin\">\r\n                        <v-col cols=\"12\" sm=\"12\" md=\"12\">\r\n                          <v-select\r\n                              :items=\"get_agents_list\"\r\n                              v-model=\"create_task_data.agent_id\"\r\n                              :label=\"translate('Agents List')\"\r\n                          ></v-select>\r\n                        </v-col>\r\n                      </template>\r\n\r\n                      <v-col cols=\"12\" sm=\"12\" md=\"12\">\r\n                        <v-text-field\r\n                          v-model=\"create_task_data.name\"\r\n                          :label=\"translate('Task Name')\"\r\n                          counter=\"50\"\r\n                          maxlength=\"50\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n\r\n                      <v-col cols=\"12\" sm=\"12\" md=\"12\">\r\n                        <v-textarea\r\n                          v-model=\"create_task_data.note\"\r\n                          :label=\"translate('Note')\"\r\n                        ></v-textarea>\r\n                      </v-col>\r\n\r\n                      <v-col cols=\"12\" sm=\"12\" md=\"12\">\r\n                        <UploadTaskFiles />\r\n                      </v-col>\r\n\r\n<!--                      <v-col cols=\"12\" sm=\"6\" md=\"6\">-->\r\n<!--                        <v-text-field-->\r\n<!--                          v-model=\"create_task_data.created_by\"-->\r\n<!--                          label=\"Created By\"-->\r\n<!--                        ></v-text-field>-->\r\n<!--                      </v-col>-->\r\n                    </v-row>\r\n                  </v-container>\r\n                </v-card-text>\r\n\r\n                <v-card-actions>\r\n                  <v-spacer></v-spacer>\r\n                  <v-btn color=\"blue darken-1\" text @click=\"close\">\r\n                    {{ translate('Cancel') }}\r\n                  </v-btn>\r\n\r\n                  <v-btn\r\n                    v-show=\"isCreateMode\"\r\n                    color=\"blue darken-1\"\r\n                    text\r\n                    @click=\"save\"\r\n                  >\r\n                    {{ translate('Create') }}\r\n                  </v-btn>\r\n                  <v-btn\r\n                    v-show=\"!isCreateMode\"\r\n                    color=\"blue darken-1\"\r\n                    text\r\n                    @click=\"update\"\r\n                  >\r\n                    {{  translate('Update')  }}\r\n                  </v-btn>\r\n                </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n            <v-dialog v-model=\"dialogDelete\" max-width=\"550px\">\r\n              <v-card>\r\n              <v-row no-gutters no-wrap style=\"padding: 24px;\">\r\n                  <img src=\"@/assets/gifs/trash.gif\" style=\"width: 56px; height: 56px;\" />\r\n                  <div style=\"margin-left: 16px;\">\r\n                      <v-card-title class=\"text-h5 p-0\">{{translate('Delete')}}</v-card-title>\r\n                      <v-card-text class=\"p-0\" style=\"margin-top: 4px;\">{{ translate('Are you sure you want to delete this item?') }}</v-card-text>\r\n                  </div>\r\n              </v-row>\r\n              <v-card-actions class=\"justify-end\">\r\n                  <button @click=\"closeDelete\" class=\"btn btn-cancel\" :class=\"{ 'btn-dark': $vuetify.theme.dark }\"\r\n                      >{{ translate('Cancel') }}</button\r\n                  >\r\n                  <button\r\n                      color=\"blue darken-1\"\r\n                      text\r\n                      @click=\"deleteTaskModalConfirm()\"\r\n                      class=\"btn btn-decline\"\r\n                      >{{translate('Confirm')}}</button\r\n                  >\r\n              </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n          </v-toolbar>\r\n        </template>\r\n        <template v-slot:[`item.date`]=\"{ item }\">\r\n          <p class=\"mt-4\">{{item.date | moment(\"DD[.]MM[.]YYYY h:mm a\")}}</p>\r\n        </template>\r\n        <template v-slot:[`item.actions`]=\"{ item }\">\r\n          <div class=\"d-flex\">\r\n            <v-btn icon @click=\"editTask(item)\">\r\n                <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.78486e-06 22.1066C0.00104677 22.6084 0.20068 23.0895 0.555672 23.4443C0.910482 23.7993 1.39158 23.9989 1.89343 24H20.2404C20.7423 23.9993 21.2234 23.7995 21.5784 23.4447C21.9334 23.0897 22.133 22.6086 22.1337 22.1066V9.37598C22.1377 9.2708 22.0986 9.16873 22.0257 9.09313C21.9527 9.01736 21.8522 8.97463 21.7471 8.97463C21.6419 8.97463 21.5414 9.01736 21.4684 9.09313C21.3955 9.16873 21.3564 9.2708 21.3604 9.37598V22.1066C21.3604 22.4036 21.2424 22.6885 21.0324 22.8986C20.8222 23.1086 20.5375 23.2265 20.2404 23.2265H1.89343C1.5964 23.2265 1.31146 23.1086 1.10145 22.8986C0.891434 22.6885 0.773455 22.4036 0.773455 22.1066V3.75956C0.773455 3.46253 0.891439 3.17777 1.10145 2.96759C1.31147 2.75757 1.5964 2.63959 1.89343 2.63959H14.6249C14.8306 2.62887 14.9918 2.45899 14.9918 2.25295C14.9918 2.04691 14.8306 1.87703 14.6249 1.8663H1.89343C1.39157 1.86734 0.910663 2.06715 0.55584 2.42197C0.200857 2.77678 0.00106288 3.25787 0 3.75955L8.78486e-06 22.1066ZM23.7739 3.44778L22.9902 4.23161L19.7686 1.00959L20.5529 0.225587H20.5528C20.6981 0.0811373 20.8946 0 21.0994 0C21.3044 0 21.501 0.0811329 21.6461 0.225587L23.7734 2.3536V2.35377C23.9184 2.49874 23.9997 2.69543 23.9997 2.90044C23.9997 3.10545 23.9184 3.30214 23.7734 3.44712L23.7739 3.44778ZM6.30331 14.7014L9.29473 17.693L5.39681 18.5679L6.30348 14.7011L6.30331 14.7014ZM18.8926 1.88536L19.221 1.55753L22.4432 4.77885L22.1148 5.10702L18.8926 1.88536ZM6.73776 14.0411L18.347 2.43274L19.6846 3.77032L8.0749 15.3783L6.73776 14.0411ZM8.62201 15.9264L20.2304 4.31757L21.568 5.65462L9.95916 17.2626L8.6221 15.9263L8.62201 15.9264Z\" fill=\"black\"/>\r\n                </svg>\r\n              </v-btn>\r\n\r\n              <v-btn icon @click=\"deleteTaskModal(item)\">\r\n                <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M14.9143 1.88238H12.2915C12.1722 1.35116 11.8564 0.873905 11.3973 0.531046C10.9383 0.188187 10.364 0.000685718 9.77139 0H8.22867C7.63609 0.000669646 7.06177 0.18817 6.60272 0.531046C6.14368 0.873905 5.8279 1.35121 5.7086 1.88238H3.08572C2.26753 1.88322 1.48319 2.18105 0.904706 2.71039C0.326362 3.23959 0.000889905 3.95728 0 4.70591C0 4.83063 0.054153 4.95033 0.150572 5.03856C0.246991 5.12695 0.377807 5.17651 0.514291 5.17651H1.04196L1.05586 21.6423C1.0555 21.6438 1.0555 21.6455 1.05586 21.647V21.6522V22.1439V22.167C1.08294 22.6615 1.31658 23.1276 1.70868 23.4688C2.10094 23.81 2.62125 24.0001 3.16246 24H14.8366C15.3774 23.9998 15.8976 23.8097 16.2895 23.4685C16.6814 23.1273 16.915 22.6614 16.9421 22.167V22.1439V21.6527C16.9423 21.6509 16.9423 21.6489 16.9421 21.6471C16.9423 21.6454 16.9423 21.6435 16.9421 21.6419L16.958 5.17649H17.4857C17.6222 5.17649 17.753 5.12694 17.8494 5.03854C17.9458 4.95031 18 4.83061 18 4.70589C17.9991 3.95722 17.6736 3.23953 17.0953 2.71037C16.5168 2.18099 15.7324 1.88318 14.9143 1.88236L14.9143 1.88238ZM8.22881 0.941191H9.77168H9.77149C10.0906 0.941191 10.4018 1.03176 10.6623 1.20034C10.9227 1.36893 11.1197 1.60716 11.226 1.88238H6.77429C6.88059 1.60715 7.07764 1.36895 7.33798 1.20034C7.59851 1.03176 7.90972 0.941191 8.22882 0.941191H8.22881ZM3.0861 2.82357H14.9148C15.3707 2.82407 15.8137 2.96303 16.1741 3.21849C16.5345 3.47396 16.7921 3.83157 16.9067 4.23537H1.09449C1.20902 3.83157 1.46663 3.47397 1.82707 3.21849C2.1875 2.96303 2.63042 2.82407 3.08638 2.82357H3.0861ZM15.9167 21.1764H2.08238L2.07049 7.05874H15.9287L15.9167 21.1764ZM14.8366 23.0588H3.16249C2.88696 23.0593 2.62166 22.9633 2.42096 22.7907C2.22026 22.6181 2.09914 22.3819 2.08249 22.1303V22.1176H15.9163V22.1303C15.8997 22.3816 15.7789 22.6176 15.5786 22.7901C15.3782 22.9627 15.1135 23.0588 14.8383 23.0588L14.8366 23.0588ZM15.9274 6.11768H2.07207V5.17648H15.9302L15.9274 6.11768Z\" fill=\"black\"/>\r\n                <path d=\"M4.02841 20.2356C4.1649 20.2356 4.29571 20.1861 4.39213 20.0978C4.48855 20.0096 4.5427 19.8899 4.5427 19.765V8.47082C4.5427 8.21083 4.31254 8.00024 4.02843 8.00024C3.74448 8.00024 3.51416 8.21085 3.51416 8.47082V19.765C3.51416 19.8899 3.56831 20.0096 3.66492 20.0978C3.76134 20.1861 3.89215 20.2356 4.02846 20.2356H4.02841Z\" fill=\"black\"/>\r\n                <path d=\"M6.51474 20.2356C6.65104 20.2356 6.78185 20.1861 6.87827 20.0978C6.97469 20.0096 7.02903 19.8899 7.02903 19.765V8.47082C7.02903 8.21083 6.79869 8.00024 6.51476 8.00024C6.23063 8.00024 6.00049 8.21085 6.00049 8.47082V19.765C6.00049 20.025 6.23065 20.2356 6.51476 20.2356L6.51474 20.2356Z\" fill=\"black\"/>\r\n                <path d=\"M9.00009 20.2356C9.13658 20.2356 9.26739 20.1861 9.36381 20.0978C9.46023 20.0096 9.51438 19.8899 9.51438 19.765V8.47082C9.51438 8.21083 9.28404 8.00024 9.00011 8.00024C8.71619 8.00024 8.48584 8.21085 8.48584 8.47082V19.765C8.48584 19.8899 8.53999 20.0096 8.63641 20.0978C8.73283 20.1861 8.86365 20.2356 9.00013 20.2356H9.00009Z\" fill=\"black\"/>\r\n                <path d=\"M11.4859 20.2356C11.6224 20.2356 11.7532 20.1861 11.8497 20.0978C11.9461 20.0096 12.0002 19.8899 12.0002 19.765V8.47082C12.0002 8.21083 11.7701 8.00024 11.486 8.00024C11.202 8.00024 10.9717 8.21085 10.9717 8.47082V19.765C10.9717 19.8899 11.026 20.0096 11.1224 20.0978C11.2189 20.1861 11.3497 20.2356 11.486 20.2356H11.4859Z\" fill=\"black\"/>\r\n                <path d=\"M13.9718 20.2356C14.1081 20.2356 14.2389 20.1861 14.3353 20.0978C14.4319 20.0096 14.4861 19.8899 14.4861 19.765V8.47082C14.4861 8.21083 14.2557 8.00024 13.9718 8.00024C13.6877 8.00024 13.4575 8.21085 13.4575 8.47082V19.765C13.4575 19.8899 13.5117 20.0096 13.6081 20.0978C13.7045 20.1861 13.8353 20.2356 13.9718 20.2356H13.9718Z\" fill=\"black\"/>\r\n                </svg>\r\n              </v-btn>\r\n          </div>\r\n        </template>\r\n      </v-data-table>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport UploadTaskFiles from '@/assets/services/UploadTaskFiles.vue'\r\nimport axios from \"axios\";\r\nimport * as LANGUAGE from '../../store/language.json';\r\nimport SnackBar from '../Snackbar/SnackBar.vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      calendar_date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n      calendar_menu: false,\r\n      lead_calendar: null,\r\n      datepickermenu: false,\r\n      hour: null,\r\n      minute: null,\r\n      hourRules: [\r\n        v => v != '' || 'Field is required!',\r\n        v => v >= 0 || '0 is the minimum',\r\n        v => v < 25 || 'Value should be smaller than 24'\r\n      ],\r\n      minuteRules: [\r\n        v => v != '' || 'Field is required!',\r\n        v => v >= 0 || '0 is the minimum',\r\n        v => v < 60 || 'Value should be smaller than 60'\r\n      ],\r\n      isCreateMode: true,\r\n      client_type: 'actual',\r\n      snackbar: {\r\n        show: false,\r\n        message: null,\r\n        color: null,\r\n      },\r\n      isAdmin: false,\r\n      items: [],\r\n      status: \"\",\r\n      type: \"\",\r\n      activePicker: null,\r\n      provisionsanfrag: \"\",\r\n      dialog: false,\r\n      dialogDelete: false,\r\n      search_string: \"\",\r\n      loading: true,\r\n      headers: [\r\n      {\r\n          text: \"#\",\r\n          align: \"start\",\r\n          value: \"id\",\r\n        },\r\n        {\r\n          text: this.translate(\"Date\"),\r\n          value: \"date\",\r\n          width: \"180px\"\r\n        },\r\n        { text: this.translate(\"Task Name\"), value: \"name\" },\r\n        { text: this.translate(\"Note\"), value: \"note\" },\r\n        { text: this.translate(\"Actions\"), value: \"actions\" },\r\n      ],\r\n      data: [],\r\n\r\n      options: {},\r\n      totalTaskTable: 0,\r\n\r\n      create_task_data: {\r\n        customer_id: \"\",\r\n        type: \"\",\r\n        name: \"\",\r\n        date: \"\",\r\n        place_id: \"\",\r\n        note: \"\",\r\n        agent_id: \"\",\r\n        new_client: \"\"\r\n        // attachments: \"\",\r\n        // created_by: \"\",\r\n      },\r\n\r\n      get_task_data: [],\r\n\r\n      customer_list_select: [],\r\n      canton_select: [],\r\n      task_type_select: [],\r\n\r\n      deleteTaskId: 0,\r\n      updateCustomerId: 0,\r\n\r\n      tasks: [],\r\n      editedIndex: -1,\r\n      editedItem: {\r\n        customer_id: \"\",\r\n        type: \"\",\r\n        name: \"\",\r\n        date: \"\",\r\n        place_id: \"\",\r\n        note: \"\",\r\n        // attachments: \"\",\r\n        // created_by: \"\",\r\n      },\r\n      defaultItem: {\r\n        customer_id: \"1\",\r\n        type: \"\",\r\n        name: \"\",\r\n        date: \"\",\r\n        place_id: \"\",\r\n        note: \"\",\r\n        // attachments: \"\",\r\n        // created_by: \"\",\r\n      },\r\n\r\n      get_agents_list: [],\r\n\r\n      showCompleted: '',\r\n\r\n      start_date_filter: '',\r\n      end_date_filter: ''\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    formTitle() {\r\n      return this.isCreateMode === true ? \"Add Task\" : \"Edit Task\";\r\n    },\r\n    formated_date() {\r\n        if (!this.calendar_date) return null\r\n\r\n        const [year, month, day] = this.calendar_date.split('-')\r\n        return `${day}.${month}.${year}`\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    client_type(val){\r\n      if(val != 'actual') {\r\n        this.create_task_data.customer_id = 0;\r\n      } else {\r\n        this.create_task_data.new_client = \"\";\r\n      }\r\n    },   \r\n    hour(newHour) {\r\n      // Pad the hour with a leading zero if it's a single-digit number\r\n      if (newHour.length === 1) {\r\n        this.hour = '0' + newHour;\r\n      }\r\n    },\r\n    dialog(val) {\r\n      val || this.close();\r\n    },\r\n    dialogDelete(val) {\r\n      val || this.closeDelete();\r\n    },\r\n    options: {\r\n      handler() {\r\n        this.getTasksDatatable();\r\n      },\r\n      deep: true,\r\n    },\r\n    search_string: {\r\n      handler() {\r\n        this.getTasksDatatable();\r\n      },\r\n      deep: true,\r\n    },\r\n    status: {\r\n      handler() {\r\n        this.getTasksDatatable();\r\n      },\r\n      deep: true,\r\n    },\r\n    showCompleted(val) {\r\n      if (val) {\r\n        this.status = 2\r\n      } else {\r\n        this.status = \"\";\r\n      }\r\n\r\n      this.getTasksDatatable()\r\n    },\r\n    calendar_date(val) {\r\n      let splitDate = val.toString().split(\",\");\r\n\r\n      this.start_date_filter = splitDate[0]\r\n      this.end_date_filter = splitDate[1]\r\n\r\n      this.getTasksDatatable();\r\n    },\r\n    menu(val) {\r\n      val && setTimeout(() => (this.activePicker = \"YEAR\"));\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.getTaskTypes();\r\n  },\r\n\r\n  mounted() {\r\n    this.getTasksDatatable();\r\n    this.getCantonSelect();\r\n    this.getCustomerList();\r\n    this.getAgentsList();\r\n    if (this.$helperPlugin.ifAdmin()) {\r\n      this.isAdmin = true;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n\r\n    getAgentsList() {\r\n      axios\r\n          .get(\"/admin/agent\")\r\n          .then((response) => {\r\n\r\n            for (let $i = 0; response.data.length > 0; $i++) {\r\n\r\n              this.get_agents_list.push({\r\n                text: response.data[$i].first_name + ' ' + response.data[$i].last_name,\r\n                value: response.data[$i].id,\r\n              });\r\n\r\n            }\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    },\r\n\r\n    getCantonSelect() {\r\n      axios\r\n          .get(\"/canton\")\r\n          .then((response) => {\r\n\r\n            for (let $i = 0; response.data.length > 0; $i++) {\r\n\r\n              this.canton_select.push({\r\n                text: response.data[$i].name,\r\n                value: response.data[$i].id,\r\n              });\r\n\r\n            }\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    },\r\n\r\n    getCustomerList() {\r\n      axios\r\n          .get(\"/customer\")\r\n          .then((response) => {\r\n\r\n            for (let $i = 0; response.data.length > 0; $i++) {\r\n\r\n              this.customer_list_select.push({\r\n                text: response.data[$i].first_name + ' ' + response.data[$i].last_name,\r\n                value: response.data[$i].id,\r\n              });\r\n\r\n            }\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    },\r\n\r\n    saveDate(date) {\r\n      this.$refs.menu.save(date);\r\n    },\r\n\r\n    getTasksDatatable() {\r\n      this.loading = true;\r\n      const { sortBy, sortDesc, page, itemsPerPage } = this.options;\r\n\r\n      let sortType;\r\n      sortType = \"asc\";\r\n      if (sortDesc[0]) {\r\n        sortType = \"desc\";\r\n      }\r\n\r\n      axios\r\n        .get(\"/task/datatable?term=\" + this.search_string + \"&type=\" + this.status + \"&start_date=\" + this.start_date_filter + \"&end_date=\" + this.end_date_filter, {\r\n          params: {\r\n            sort_by: sortBy[0],\r\n            sort: sortType,\r\n            page: page,\r\n            per_page: itemsPerPage,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          this.tasks = response.data.data;\r\n          this.totalTaskTable = response.data.total;\r\n          this.loading = false;\r\n\r\n          this.$nextTick(() => {\r\n            const currentEl = this.$el.querySelector(\".v-data-footer__pagination\");\r\n            const translated = currentEl.innerHTML.replace(\"of\", this.translate(\"of\"));\r\n\r\n            currentEl.innerHTML = translated;\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    createTask() {\r\n      const { customer_id, type, name, date, place_id, note, agent_id, new_client } = this.create_task_data;\r\n\r\n      // var _date = new Date(`${date} ${this.hour}:${this.minute}`);\r\n      // var offset = 1; // CET is 1 hour ahead of UTC\r\n      // var utc = _date.getTime() + (_date.getTimezoneOffset() * 60000);\r\n      // var cet = new Date(utc + (3600000*offset));\r\n      \r\n      const hourInt = parseInt(this.hour, 10);\r\n      const minuteInt = parseInt(this.minute, 10);\r\n      \r\n      const dt = new Date(`${date}T00:00:00Z`);\r\n      dt.setUTCHours(hourInt);\r\n      dt.setUTCMinutes(minuteInt);\r\n\r\n\r\n      axios\r\n        .post(\"/task\", {\r\n          customer_id,\r\n          type,\r\n          name,\r\n          date: dt,\r\n          place_id,\r\n          note,\r\n          agent_id,\r\n          new_client\r\n        })\r\n        .then(() => {\r\n          this.create_task_data = {};\r\n          this.snackbar = {\r\n            message: \"Data updated successfully\",\r\n            error: false\r\n          };\r\n\r\n          this.$refs.snackbar.toggleSnackbar(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    getTask(task_id) {\r\n      axios\r\n        .get(\"/task/\" + task_id)\r\n        .then((response) => {\r\n          this.create_task_data = {};\r\n\r\n          this.get_task_data.push(response.data.data);\r\n\r\n          this.create_task_data.customer_id = parseInt(response.data.data.customer_id);\r\n          this.create_task_data.type = parseInt(response.data.data.type);\r\n          this.create_task_data.name = response.data.data.name;\r\n          this.create_task_data.date = response.data.data.date;\r\n          this.create_task_data.place_id = parseInt(response.data.data.place_id);\r\n          this.create_task_data.agent_id = parseInt(response.data.data.agent_id);\r\n          this.create_task_data.note = response.data.data.note;\r\n          this.create_task_data.created_by = response.data.data.created_by;\r\n          this.create_task_data.new_client = response.data.data.new_client;\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    updateTask(task_id) {\r\n      axios\r\n        .put(\"/task/\" + task_id, this.create_task_data)\r\n        .then((response) => {\r\n          this.snackbar = {\r\n            message: response.data.message,\r\n            color: \"success\",\r\n            error: false,\r\n          };\r\n\r\n          this.$refs.snackbar.toggleSnackbar(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    deleteTask(task_id) {\r\n      axios\r\n        .delete(\"/task/\" + task_id)\r\n        .then((response) => {\r\n          this.snackbar = {\r\n            message: response.data.message,\r\n            color: \"success\",\r\n            error: false,\r\n          };\r\n\r\n          this.$refs.snackbar.toggleSnackbar(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    updateTaskStatus(task_id) {\r\n      axios\r\n        .put(\"/task/complete/\" + task_id, {\r\n          complete: \"1\",\r\n        })\r\n        .then((response) => {\r\n          alert(response.data.message);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    getTaskTypes() {\r\n      axios\r\n        .get(\"/tasktype\")\r\n        .then((response) => {\r\n          for (let $i = 0; response.data.length > 0; $i++) {\r\n            this.task_type_select.push({\r\n              text: this.translate(response.data[$i].name),\r\n              value: response.data[$i].id,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    openDialog() {\r\n      this.create_task_data = this.defaultItem;\r\n      this.isCreateMode = true;\r\n      this.dialog = true;\r\n    },\r\n\r\n    editTask(item) {\r\n      this.isCreateMode = false;\r\n      this.getTask(item.id);\r\n      this.updateTaskId = item.id;\r\n      this.dialog = true;\r\n    },\r\n\r\n    deleteTaskModal(item) {\r\n      this.deleteTaskId = item.id;\r\n      this.dialogDelete = true;\r\n    },\r\n\r\n    deleteTaskModalConfirm() {\r\n      this.closeDelete();\r\n      this.deleteTask(this.deleteTaskId);\r\n      this.getTasksDatatable();\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n    },\r\n\r\n    closeDelete() {\r\n      this.dialogDelete = false;\r\n    },\r\n\r\n    save() {\r\n      this.close();\r\n      this.createTask();\r\n      this.getTasksDatatable();\r\n    },\r\n\r\n    update() {\r\n      this.close();\r\n      this.updateTask(this.updateTaskId);\r\n      this.getTasksDatatable();\r\n    },\r\n  },\r\n\r\n\r\n  components: { UploadTaskFiles, SnackBar },\r\n};\r\n</script>\r\n\r\n<style>\r\ntbody tr:nth-of-type(odd) {\r\n  background-color: #f7fcfe;\r\n}\r\n\r\n.v-data-table {\r\n  border-radius: 10px;\r\n}\r\n\r\n.v-data-table tr td {\r\n  border: none !important;\r\n}\r\n\r\n.v-counter {\r\n  margin-top: 5px !important;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}