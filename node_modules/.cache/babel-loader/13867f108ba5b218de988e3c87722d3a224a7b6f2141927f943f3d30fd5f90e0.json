{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport * as LANGUAGE from '../../store/language.json';\nimport SnackBar from \"../Snackbar/SnackBar.vue\";\nexport default {\n  name: \"LoginComponent\",\n  data() {\n    return {\n      showPassword: false,\n      showConfirmPassword: false,\n      snackbar: {\n        show: false,\n        message: null,\n        color: null\n      },\n      email: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      approved: 0\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    register() {\n      axios.post(\"/register\", {\n        first_name: this.first_name,\n        last_name: this.last_name,\n        email: this.email,\n        password: this.password,\n        password_confirmation: this.password_confirmation,\n        approved: this.approved\n      }).then(response => {\n        this.$router.push({\n          path: \"/login\"\n        });\n        console.log(response.data);\n      }).catch(error => {\n        console.log(\"test\", error);\n        this.snackbar = {\n          message: error.response.data.message,\n          color: \"error\",\n          error: true\n        };\n        this.$refs.snackbar.toggleSnackbar(true);\n      });\n    }\n  },\n  components: {\n    SnackBar\n  }\n};","map":{"version":3,"names":["axios","LANGUAGE","SnackBar","name","data","showPassword","showConfirmPassword","snackbar","show","message","color","email","first_name","last_name","password","password_confirmation","approved","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","register","post","then","response","$router","push","path","console","log","catch","error","$refs","toggleSnackbar","components"],"sources":["src/components/Authentication/Register.vue"],"sourcesContent":["<template>\r\n  <v-container fill-height fluid>\r\n    <SnackBar :data=\"snackbar\" ref=\"snackbar\"></SnackBar>\r\n    <v-row align-self=\"center\" justify=\"center\">\r\n      <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n        <v-row class=\"d-flex justify-center\">\r\n          <v-col cols=\"12\" xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n            <div class=\"d-flex justify-center\">\r\n              <v-img\r\n                src=\"@/assets/images/logo-login.png\"\r\n                max-width=\"120\"\r\n              ></v-img>\r\n            </div>\r\n            <v-form class=\"mt-15\" ref=\"form\">\r\n              <v-text-field\r\n                v-model=\"first_name\"\r\n                :label=\"translate('First Name')\"\r\n                type=\"text\"\r\n                clearable\r\n                required\r\n                flat\r\n                filled\r\n                background-color=\"#fff\"\r\n                prepend-inner-icon=\"mdi-account-outline\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"last_name\"\r\n                :label=\"translate('Last Name')\"\r\n                type=\"text\"\r\n                clearable\r\n                required\r\n                flat\r\n                filled\r\n                background-color=\"#fff\"\r\n                prepend-inner-icon=\"mdi-account-outline\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"email\"\r\n                :label=\"translate('Your email')\"\r\n                type=\"email\"\r\n                clearable\r\n                required\r\n                flat\r\n                filled\r\n                background-color=\"#fff\"\r\n                prepend-inner-icon=\"mdi-email-outline\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"password\"\r\n                :label=\"translate('Password')\"\r\n                :type=\"showPassword ? 'text' : 'password'\"\r\n                @click:append=\"showPassword = !showPassword\"\r\n                required\r\n                flat\r\n                :append-icon=\"showPassword ? 'mdi-eye-outline' : 'mdi-eye-off-outline'\"\r\n                filled\r\n                background-color=\"#fff\"\r\n                prepend-inner-icon=\"mdi-lock-outline\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"password_confirmation\"\r\n                :label=\"translate('Repeat Password')\"\r\n                :type=\"showConfirmPassword ? 'text' : 'password'\"\r\n                @click:append=\"showConfirmPassword = !showConfirmPassword\"\r\n                required\r\n                flat\r\n                :append-icon=\"showConfirmPassword ? 'mdi-eye-outline' : 'mdi-eye-off-outline'\"\r\n                filled\r\n                background-color=\"#fff\"\r\n                prepend-inner-icon=\"mdi-lock-outline\"\r\n              ></v-text-field>\r\n              <v-btn block x-large color=\"#1a1f3a\" @click=\"register\">\r\n                {{ translate('Sign Up') }}\r\n              </v-btn>\r\n            </v-form>\r\n\r\n            <h4 class=\"mt-10 text-center\">\r\n              {{ translate('Already registered?') }}\r\n              <router-link to=\"/login\">{{ translate('Log in') }}</router-link>\r\n            </h4>\r\n          </v-col>\r\n        </v-row>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as LANGUAGE from '../../store/language.json';\r\nimport SnackBar from \"../Snackbar/SnackBar.vue\";\r\n\r\nexport default {\r\n  name: \"LoginComponent\",\r\n  data() {\r\n    return {\r\n      showPassword: false,\r\n      showConfirmPassword: false,\r\n      snackbar: {\r\n        show: false,\r\n        message: null,\r\n        color: null,\r\n      },\r\n      email: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      approved: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    register() {\r\n      axios\r\n        .post(\"/register\", {\r\n          first_name: this.first_name,\r\n          last_name: this.last_name,\r\n          email: this.email,\r\n          password: this.password,\r\n          password_confirmation: this.password_confirmation,\r\n          approved: this.approved,\r\n        })\r\n        .then((response) => {\r\n          this.$router.push({\r\n            path: \"/login\",\r\n          });\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"test\", error);\r\n          this.snackbar = {\r\n            message: error.response.data.message,\r\n            color: \"error\",\r\n            error: true,\r\n          };\r\n\r\n          this.$refs.snackbar.toggleSnackbar(true);\r\n        });\r\n    },\r\n  },\r\n  components: {\r\n    SnackBar\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  color: #fff !important;\r\n}\r\n</style>"],"mappings":";AA4FA,OAAAA,KAAA;AACA,YAAAC,QAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,mBAAA;MACAC,QAAA;QACAC,IAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAC,KAAA;MACAC,UAAA;MACAC,SAAA;MACAC,QAAA;MACAC,qBAAA;MACAC,QAAA;IACA;EACA;EAEAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAnB,QAAA,CAAAoB,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAA3B,QAAA,CAAAmB,SAAA,EAAAS,MAAA;MACA;QACA,OAAA5B,QAAA,CAAAmB,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,SAAA;MACA9B,KAAA,CACA+B,IAAA;QACAnB,UAAA,OAAAA,UAAA;QACAC,SAAA,OAAAA,SAAA;QACAF,KAAA,OAAAA,KAAA;QACAG,QAAA,OAAAA,QAAA;QACAC,qBAAA,OAAAA,qBAAA;QACAC,QAAA,OAAAA;MACA,GACAgB,IAAA,CAAAC,QAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;UACAC,IAAA;QACA;QACAC,OAAA,CAAAC,GAAA,CAAAL,QAAA,CAAA7B,IAAA;MACA,GACAmC,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,SAAAE,KAAA;QACA,KAAAjC,QAAA;UACAE,OAAA,EAAA+B,KAAA,CAAAP,QAAA,CAAA7B,IAAA,CAAAK,OAAA;UACAC,KAAA;UACA8B,KAAA;QACA;QAEA,KAAAC,KAAA,CAAAlC,QAAA,CAAAmC,cAAA;MACA;IACA;EACA;EACAC,UAAA;IACAzC;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}