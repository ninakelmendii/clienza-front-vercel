{"ast":null,"code":"import axios from \"axios\";\nimport * as LANGUAGE from '../../store/language.json';\nexport default {\n  name: \"UserCard\",\n  data() {\n    return {\n      newLeads: 0,\n      callBacks: 0,\n      pendingIssues: 0,\n      totalLeads: 0\n    };\n  },\n  methods: {\n    translate(word) {\n      let wordIndex = null;\n      LANGUAGE.forEach((lng, index) => {\n        if (lng.english.toLowerCase() == word.toLowerCase()) {\n          wordIndex = index;\n        }\n      });\n      if (wordIndex === null) {\n        return word;\n      }\n      if (this.$store.state.language == 'german') {\n        return LANGUAGE[wordIndex].german;\n      } else {\n        return LANGUAGE[wordIndex].english;\n      }\n    },\n    getLeadsStatistics() {\n      axios.get(\"/sale/dashboard\").then(result => {\n        console.log(result);\n        let stats = result.data.data.leads;\n        this.newLeads = stats.new;\n        this.callBacks = stats.callbacks;\n        this.totalLeads = stats.total;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  created() {\n    this.getLeadsStatistics();\n  }\n};","map":{"version":3,"names":["axios","LANGUAGE","name","data","newLeads","callBacks","pendingIssues","totalLeads","methods","translate","word","wordIndex","forEach","lng","index","english","toLowerCase","$store","state","language","german","getLeadsStatistics","get","then","result","console","log","stats","leads","new","callbacks","total","catch","error","created"],"sources":["src/components/Dashboard/StatsCard.vue"],"sourcesContent":["<template>\r\n  <v-row>\r\n    <v-col>\r\n      <v-card outlined rounded class=\"card-stats\">\r\n        <v-row>\r\n          <v-col cols=\"12\">\r\n            <v-row>\r\n              <v-col cols=\"6\">\r\n                <v-list-item-title class=\"text-p mb-1 stats-inner-card\">\r\n                  <span class=\"stats-title\"\r\n                    >{{ translate('New Leads') }}\r\n                    <h2 class=\"font-weight-bold stats\">{{ newLeads }}</h2></span\r\n                  >\r\n                </v-list-item-title>\r\n              </v-col>\r\n\r\n              <v-col cols=\"6\">\r\n                <v-list-item-title class=\"text-p mb-1 stats-inner-card\">\r\n                  <span class=\"stats-title\"\r\n                    >{{ translate('Callbacks') }}\r\n                    <h2 class=\"font-weight-bold stats\">\r\n                      {{ callBacks }}\r\n                    </h2></span\r\n                  >\r\n                </v-list-item-title>\r\n              </v-col>\r\n\r\n              <v-col cols=\"6\">\r\n                <v-list-item-title class=\"text-p mb-1 stats-inner-card\">\r\n                  <span class=\"stats-title\"\r\n                    >{{ translate('Completed') }}\r\n                    <h2 class=\"font-weight-bold stats\">\r\n                      {{ totalLeads }}\r\n                    </h2></span\r\n                  >\r\n                </v-list-item-title>\r\n              </v-col>\r\n\r\n              <v-col cols=\"6\">\r\n                <v-list-item-title class=\"text-p mb-1 stats-inner-card\">\r\n                  <span class=\"stats-title\"\r\n                    >{{ translate('Total Leads') }}\r\n                    <h2 class=\"font-weight-bold stats\">\r\n                      {{ totalLeads }}\r\n                    </h2></span\r\n                  >\r\n                </v-list-item-title>\r\n              </v-col>\r\n            </v-row>\r\n          </v-col>\r\n        </v-row>\r\n      </v-card>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as LANGUAGE from '../../store/language.json';\r\n\r\nexport default {\r\n  name: \"UserCard\",\r\n\r\n  data() {\r\n    return {\r\n      newLeads: 0,\r\n      callBacks: 0,\r\n      pendingIssues: 0,\r\n      totalLeads: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    translate(word) {\r\n      let wordIndex = null;\r\n\r\n      LANGUAGE.forEach((lng, index) => {\r\n        if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n          wordIndex = index;\r\n        }\r\n      });\r\n\r\n      if(wordIndex === null) {\r\n        return word;\r\n      }\r\n\r\n      if(this.$store.state.language == 'german') {\r\n        return LANGUAGE[wordIndex].german;\r\n      } else {\r\n        return LANGUAGE[wordIndex].english;\r\n      }\r\n    },\r\n    getLeadsStatistics() {\r\n      axios\r\n        .get(\"/sale/dashboard\")\r\n        .then((result) => {\r\n          console.log(result);\r\n          let stats = result.data.data.leads;\r\n\r\n          this.newLeads = stats.new;\r\n          this.callBacks = stats.callbacks;\r\n          this.totalLeads = stats.total;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.getLeadsStatistics();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.theme--light .stats-title {\r\n  color: rgba(0, 0, 0, 0.76);\r\n  font-size: 16px;\r\n}\r\n\r\n.stats {\r\n  font-size: 30px;\r\n}\r\n\r\n.theme--light .stats-inner-card {\r\n  background: #f4f4fc;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n}\r\n\r\n.theme--dark .stats-inner-card {\r\n  background: rgba(0, 0, 0, 0.25);\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n}\r\n\r\n.card-stats {\r\n  padding: 34px;\r\n  border-radius: 10px !important;\r\n  border: none;\r\n}\r\n\r\nspan.this-week {\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.56);\r\n}\r\n\r\n.v-divider {\r\n    border-color: rgba(255, 255, 255, 1);\r\n    border: solid 1px #fff;\r\n}\r\n</style>"],"mappings":"AAyDA,OAAAA,KAAA;AACA,YAAAC,QAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,aAAA;MACAC,UAAA;IACA;EACA;EAEAC,OAAA;IACAC,UAAAC,IAAA;MACA,IAAAC,SAAA;MAEAV,QAAA,CAAAW,OAAA,EAAAC,GAAA,EAAAC,KAAA;QACA,IAAAD,GAAA,CAAAE,OAAA,CAAAC,WAAA,MAAAN,IAAA,CAAAM,WAAA;UACAL,SAAA,GAAAG,KAAA;QACA;MACA;MAEA,IAAAH,SAAA;QACA,OAAAD,IAAA;MACA;MAEA,SAAAO,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,OAAAlB,QAAA,CAAAU,SAAA,EAAAS,MAAA;MACA;QACA,OAAAnB,QAAA,CAAAU,SAAA,EAAAI,OAAA;MACA;IACA;IACAM,mBAAA;MACArB,KAAA,CACAsB,GAAA,oBACAC,IAAA,CAAAC,MAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,MAAA;QACA,IAAAG,KAAA,GAAAH,MAAA,CAAArB,IAAA,CAAAA,IAAA,CAAAyB,KAAA;QAEA,KAAAxB,QAAA,GAAAuB,KAAA,CAAAE,GAAA;QACA,KAAAxB,SAAA,GAAAsB,KAAA,CAAAG,SAAA;QACA,KAAAvB,UAAA,GAAAoB,KAAA,CAAAI,KAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAR,OAAA,CAAAC,GAAA,CAAAO,KAAA;MACA;IACA;EACA;EAEAC,QAAA;IACA,KAAAb,kBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}