{"version":3,"file":"js/782.aeecd502.js","mappings":"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","sources":["webpack://frontend/./src/components/Navbar/UserControl.vue","webpack://frontend/src/components/Navbar/UserControl.vue","webpack://frontend/./src/components/Navbar/UserControl.vue?16fe","webpack://frontend/./src/components/Navbar/UserControl.vue?5a66","webpack://frontend/./services/const/const.js","webpack://frontend/./services/mgraph.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"12\",\"lg\":\"12\"}},[_c('div',{staticClass:\"second-sidebar-header\",staticStyle:{\"padding\":\"0\"}},[_c('v-icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isMobile),expression:\"isMobile\"}],on:{\"click\":function($event){return _vm.$store.dispatch('toggleSecondVariant')}}},[_vm._v(\"mdi-arrow-collapse-right\")]),_c('div',[_c('button',{staticClass:\"border-blue\",staticStyle:{\"overflow\":\"hidden\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.$store.dispatch('toggleLanguage')}}},[(_vm.$store.state.language == 'german')?_c('div',{staticClass:\"center\"},[_c('img',{staticStyle:{\"width\":\"24px\",\"height\":\"24px\",\"object-fit\":\"cover\",\"border-radius\":\"999px\"},attrs:{\"src\":require(\"@/assets/images/flags/swiss.webp\"),\"alt\":\"german language\"}}),_vm._v(\" CH \")]):_c('div',{staticClass:\"center\"},[_c('img',{staticStyle:{\"width\":\"24px\",\"height\":\"24px\",\"border-radius\":\"999px\",\"object-fit\":\"cover\"},attrs:{\"src\":require(\"@/assets/images/flags/uk.png\"),\"alt\":\"german language\"}}),_vm._v(\" EN \")])]),_c('v-menu',{attrs:{\"offset-y\":\"\",\"left\":\"\",\"bottom\":\"\",\"transition\":\"slide-x-transition\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-avatar',_vm._g(_vm._b({attrs:{\"size\":\"35\"}},'v-avatar',attrs,false),on),[(_vm.$store.state.profileImage.img_path)?_c('img',{staticClass:\"pa-1\",staticStyle:{\"object-fit\":\"contain\"},attrs:{\"src\":_vm.$store.state.profileImage.img_path}}):_c('v-img',{attrs:{\"src\":require(\"@/assets/images/guest_profile_pic.png\")}})],1)]}}])},[_c('v-list',{staticClass:\"p-0\"},[_c('v-list-item',{staticClass:\"p-0\"},[_c('v-btn',{staticStyle:{\"background\":\"transparent\"},on:{\"click\":_vm.goToProfile}},[_vm._v(\" \"+_vm._s(_vm.translate('Profile'))+\" \")])],1),_c('v-list-item',{staticClass:\"p-0\"},[_c('v-btn',{staticStyle:{\"background\":\"transparent\"},on:{\"click\":_vm.exitApp}},[_vm._v(_vm._s(_vm.translate('Log out')))])],1)],1)],1)],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-col cols=\"12\" md=\"12\" lg=\"12\">\r\n    <div class=\"second-sidebar-header\" style=\"padding: 0\">\r\n      <v-icon v-show=\"isMobile\" @click=\"$store.dispatch('toggleSecondVariant')\">mdi-arrow-collapse-right</v-icon>\r\n      <div>\r\n      <button class=\"border-blue\" @click=\"$store.dispatch('toggleLanguage')\" style=\" overflow: hidden; cursor: pointer; \">\r\n        <div v-if=\"$store.state.language == 'german'\" class=\"center\">\r\n          <img src=\"@/assets/images/flags/swiss.webp\" alt=\"german language\" style=\"width: 24px; height: 24px; object-fit: cover; border-radius: 999px;\" />\r\n          CH\r\n        </div>\r\n        <div v-else class=\"center\">\r\n          <img src=\"@/assets/images/flags/uk.png\" alt=\"german language\" style=\"width: 24px; height: 24px; border-radius: 999px; object-fit: cover; border-radius: 999px;\" />\r\n          EN\r\n        </div>\r\n      </button>\r\n  <!-- <div class=\"mode\" :class=\"{active: $vuetify.theme.dark}\" @click=\"$vuetify.theme.dark = !$vuetify.theme.dark\" :title=\"translate('Switch light/dark mode')\"></div> -->\r\n  <!-- <v-badge color=\"error\" overlap :content=\"total_notifications\">\r\n    <v-menu\r\n      bottom\r\n      offset-y\r\n      origin=\"center center\"\r\n      transition=\"scale-transition\"\r\n    >\r\n      <template v-slot:activator=\"{ on, attrs }\">\r\n        <v-icon color=\"black\" v-bind=\"attrs\" v-on=\"on\">mdi-bell</v-icon>\r\n      </template>\r\n      <v-card class=\"mx-auto\" max-width=\"300\" tile>\r\n        <v-list shaped>\r\n          <v-subheader>{{ translate('NOTIFICATIONS') }}</v-subheader>\r\n          <v-list-item-group color=\"primary\">\r\n            <v-list-item v-for=\"(item, i) in items\" :key=\"i\">\r\n              <v-list-item-content>\r\n                <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n          </v-list-item-group>\r\n        </v-list>\r\n      </v-card>\r\n    </v-menu>\r\n  </v-badge> -->\r\n  <v-menu offset-y left bottom transition=\"slide-x-transition\">\r\n    <template v-slot:activator=\"{ on, attrs }\">\r\n      <v-avatar size=\"35\" v-on=\"on\" v-bind=\"attrs\">\r\n        <img class=\"pa-1\" :src=\"$store.state.profileImage.img_path\" v-if=\"$store.state.profileImage.img_path\" style=\"object-fit: contain;\"/>\r\n        <v-img src=\"@/assets/images/guest_profile_pic.png\" v-else></v-img>\r\n      </v-avatar>\r\n    </template>\r\n    <v-list class=\"p-0\">\r\n      <v-list-item class=\"p-0\">\r\n        <v-btn @click=\"goToProfile\" style=\"background: transparent\">\r\n          {{translate('Profile')}}\r\n        </v-btn>\r\n      </v-list-item>\r\n      <v-list-item class=\"p-0\">\r\n        <v-btn @click=\"exitApp\" style=\"background: transparent\">{{ translate('Log out') }}</v-btn>\r\n      </v-list-item>\r\n    </v-list>\r\n  </v-menu>\r\n  </div>\r\n  </div>\r\n</v-col>\r\n</template>\r\n\r\n<script>\r\n  import * as LANGUAGE from '../../store/language.json';\r\n\r\n    export default {\r\n        name: 'UserControl',\r\n        methods: {\r\n          translate(word) {\r\n            let wordIndex = null;\r\n\r\n            LANGUAGE.forEach((lng, index) => {\r\n              if(lng.english.toLowerCase() == word.toLowerCase()) {\r\n                wordIndex = index;\r\n              }\r\n            });\r\n\r\n            if(wordIndex === null) {\r\n              return word;\r\n            }\r\n\r\n            if(this.$store.state.language == 'german') {\r\n              return LANGUAGE[wordIndex].german;\r\n            } else {\r\n              return LANGUAGE[wordIndex].english;\r\n            }\r\n          },\r\n          goToProfile() {\r\n            this.$router.push('/profile')\r\n          },\r\n          exitApp() {\r\n            localStorage.removeItem(\"token\");\r\n            localStorage.removeItem(\"user\");\r\n            this.$router.push(\"/login\");\r\n          },\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserControl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserControl.vue?vue&type=template&id=fb018ecc&\"\nimport script from \"./UserControl.vue?vue&type=script&lang=js&\"\nexport * from \"./UserControl.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export const TOKEN = \"EwCAA8l6BAAUAOyDv0l6PcCVu89kmzvqZmkWABkAAaJN5BJUxx3rKjjD5LS27hn8Vn60P0ub8WFuvjpGqxrqrMZgDhcI7XVTerA8Kr1pAtMf2X1IRAK4hxOoiztBiERzZLWP/pn4KPhaSSz1yVdDVHjD+hoxzHbTBsymcLTQ8UWcF57uqZhNIxuULIWux1bE6ucSM6Rt7E01vjP11Fe+KTT/7Ejv7xDfGeru0PNl5EDMj+6cYLJH+F3xACwXqMToo587JjLuk2y4j+AaDlUNDKLE9FjpJxZsiruNDGsQfU58vPfAk3qg/AzcmTqKgnofaiWBo8OZQ8xZ92VnDENtMWkSq2DK31YNP4TsWqzeXzV3IvvSrPjLQXOTqC7Iqw4DZgAACPCx41q76eziUAJnUNZdiAbvGCYpoQDoOuyqTrzmWofnafXta2uTIh/Zd9MyPohr19Xqv/0aznfzImRoDYZ08bu/VHE2NUyNaptvJ5/5E9+JPdwMo1xWOk+aykIZr9Bw5EjynvreZck64eCco1lL7u4H/n0iyYNOoKG05pTtHne+CYnkIBbLNnzuScMdRpKkyEphhYkoLgnVIaLVMKR60lg/EbFxGmzzB/LVC4qIXK4VQvKCS8A+pA9LYA7/Aa8msq4yOPzC7Va16+3/IiVLOp/ZyvtWnecMHQYQ12yYqEAZGnkY2BCBPfPkFYjpp6soRpwje8MYNJ2HQrHfJfU02thCv96rpuDknW2K8Ip+SPIi/mnQTpwFwYB8mxBMUeB6pSvCpj4BZQV0ZyVP1+za+yW7yT+J5HSqZGC1Bs0PAaCTz5CJXmg30z9lDpiQnDUwA3Qhh7JsBrRdIviBiaVLCDri1Brz12jLbRPv1V3KYiCR1jlpkXn1xsLMFZ5pNaOOCTOOTMn4yG7taZNgnGeSCFgx/F94Pq6tw2vF1g8u41pvcFtP3FZwYx5bnAlsZ3rymeftQXlEMoLgFveEkH1NXlcszny0B5E/wVdhbdWaZpjv1W3J0SIAz8XuS/HhnkAjR9rpVuR5pGYne9LQgAxIctLMzEFpU4ThlLVVOgQ8wJfHprkJrr86UnprdfXdyGMWerCBxfURe1DsXo7uau8BQ5RwqBneZcYWOBji9bbDwscKExli22ddyXv0SAiaiSaVgzH9AXx80gBsVGxuo8ledGRt94FZn19e0guKiQI=\";\r\n","import { TOKEN } from \"./const/const\";\r\n\r\n// import { Client } from \"@microsoft/microsoft-graph-client\";\r\n// import { TokenCredentialAuthenticationProvider } from \"@microsoft/microsoft-graph-client/authProviders/azureTokenCredentials\";\r\n// import { ClientSecretCredential } from '@azure/identity';\r\n\r\n\r\n// const tenantId = 'f8cdef31-a31e-4b4a-93e4-5f571e91255a';\r\n// const clientId = '34f6579c-78e8-4442-af4f-d75ae62ab834';\r\n// // const clientSecret = 'ba446ccb-259d-4336-a41f-8e4ca1550c98';\r\n// const redirectUri = 'https://localhost:8080';\r\n\r\n// // Set the scope for the token\r\n// const scope = 'https://graph.microsoft.com/.default';\r\n\r\n// // Build the authorization URL\r\n// const authUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&scope=${scope}`;\r\n\r\n// Redirect the user to the authorization URL\r\n// window.location.href = authUrl;\r\n\r\n// const credential = new ClientSecretCredential(tenantId, clientId, clientSecret);\r\n// const authProvider = new TokenCredentialAuthenticationProvider(credential, {scopes: [\"user.read\"]});\r\n\r\n\r\n// const clientId = 'YOUR_CLIENT_ID';\r\n// const clientSecret = 'YOUR_CLIENT_SECRET';\r\n// const refreshToken = 'YOUR_REFRESH_TOKEN';\r\n\r\n// const body = `grant_type=refresh_token&client_id=${clientId}&client_secret=${clientSecret}&refresh_token=${TOKEN}`;\r\n\r\n// const url = `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/token`;\r\n\r\n// fetch(url, {\r\n//     method: 'POST',\r\n//     body: body,\r\n//     headers: {\r\n//         'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n// }).then(response => {\r\n//    console.log(response)\r\n// })\r\n\r\n\r\n\r\n// --------------------------------------------------- new testing\r\n// const msal = require(\"@azure/msal-node\");\r\n\r\n// const msalConfig = {\r\n//     auth: {\r\n//         clientId: \"6951f7bc-086d-418f-a71d-cca7b39579ac\",\r\n//         authority: \"d1ca4da3-96eb-4253-a757-799e22e5d98c\",\r\n//     }\r\n// };\r\n\r\n// const pca = new msal.PublicClientApplication(msalConfig);\r\n\r\n// // For testing, enter your username and password below.\r\n// // In production, replace this with a UI prompt instead.\r\n// const usernamePasswordRequest = {\r\n//     scopes: [\"user.read\"],\r\n//     username: \"info@clienza.ch\", // Add your username here\r\n//     password: \"Clienza2022.\", // Add your password here\r\n// };\r\n\r\n// pca.acquireTokenByUsernamePassword(usernamePasswordRequest).then((response) => {\r\n//     console.log(\"acquired token by password grant\", response);\r\n// }).catch((error) => {\r\n//     console.log(error);\r\n// });\r\n\r\n\r\nclass MGraph {\r\n    // Outlook calendar\r\n    static async getAllEvents(){\r\n        const now = new Date();\r\n        const start = new Date(now.setFullYear(now.getFullYear() - 1)).toDateString();\r\n        const end = new Date(now.setFullYear(now.getFullYear() + 2)).toDateString();\r\n\r\n        const request = await fetch(`https://graph.microsoft.com/v1.0/me/calendarview?startdatetime=${start}&enddatetime=${end}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${TOKEN}`\r\n            }\r\n        })\r\n\r\n        const response = await request.json();\r\n\r\n        return response.value;\r\n    }\r\n\r\n    static async createEvent(params){\r\n        try {\r\n            const request = await fetch('https://graph.microsoft.com/v1.0/me/events',{\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Authorization': `Bearer ${TOKEN}`,\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify(params)\r\n            });\r\n\r\n        const response = await request.json();\r\n        return response;\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    // --------------------------------\r\n    // OneDrive:\r\n\r\n    // Folder and data\r\n    static async getItems(){\r\n        const request = await fetch('https://graph.microsoft.com/v1.0/me/drive/root/children', { method: \"GET\", 'headers': {\r\n            'Authorization': `Bearer ${TOKEN}`\r\n        } });\r\n\r\n        const response = await request.json();\r\n\r\n        return response;\r\n    }\r\n\r\n    static async getClienzaId(){\r\n        const { value } = await this.getItems();\r\n        let clienzaId = null;\r\n\r\n        value.forEach(item => {\r\n            if(item.name.toLowerCase() == 'clienza') clienzaId = item.id;\r\n        });\r\n\r\n        return clienzaId;\r\n    }\r\n\r\n    static async getRootFolderId(folderName) {\r\n        const id = await this.getClienzaId();\r\n        let folderId = null;\r\n\r\n        const request = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${id}/children`, {\r\n            method: 'GET',\r\n            headers: { 'Authorization': `Bearer ${TOKEN}` }\r\n        });\r\n\r\n        const response = await request.json();\r\n\r\n        const { value } = response;\r\n\r\n        value.forEach(v => {\r\n            if(v.name.toLowerCase() == folderName) folderId = v.id;\r\n        });\r\n\r\n        return folderId;\r\n    }\r\n\r\n    static async getClienzaRoot() {\r\n        const id = await this.getClienzaId();\r\n\r\n        const request = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${id}/children`, { method: \"GET\", 'headers': {\r\n            'Authorization': `Bearer ${TOKEN}`\r\n        }});\r\n\r\n        const response = await request.json();\r\n\r\n        return response;\r\n    }\r\n\r\n    static async createFolder(folderName, location){\r\n        const driveItem = {\r\n            \"name\": folderName,\r\n            \"folder\": { },\r\n            '@microsoft.graph.conflictBehavior': 'rename'\r\n          };\r\n\r\n        const request = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${location}/children`, { method: \"POST\", headers: {\r\n                'Authorization': `Bearer ${TOKEN}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }, body: JSON.stringify(driveItem)\r\n        });\r\n\r\n        const response = await request.json();\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n    // Customers operations\r\n    static async getCustomers(){\r\n        const customersFolder = await this.getRootFolderId('customers');\r\n\r\n        const request = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${customersFolder}/children`, {\r\n            method: 'GET',\r\n            headers: { 'Authorization': `Bearer ${TOKEN}` }\r\n        });\r\n\r\n        const response = await request.json();\r\n\r\n        return response;\r\n    }\r\n\r\n    static async checkCustomerSpace(customer, no_id = false){\r\n        const allCustomers = await this.getCustomers();\r\n        let existence = {\r\n            exists: false\r\n        };\r\n\r\n        if(no_id) {\r\n            allCustomers.value.forEach(cust => {\r\n                const id = cust.name.split(' ');\r\n\r\n                if(id[id.length - 1] == customer) {\r\n                    existence.exists = true;\r\n                    existence.customer = cust;\r\n                }\r\n            });\r\n        } else {\r\n            allCustomers.value.forEach(cust => {\r\n                if(cust.name == customer) {\r\n                    existence.exists = true;\r\n                    existence.customer = cust;\r\n                }\r\n            })\r\n        }\r\n\r\n        return existence;\r\n    }\r\n\r\n    static async sendDocument({ customer, type, file }) {\r\n        // Getting the customer\r\n        const customerInfo = await this.checkCustomerSpace(customer);\r\n\r\n        // If customer exists\r\n        if(customerInfo.exists) {\r\n            const request = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${customerInfo.customer.id}/children`, {\r\n                method: 'GET',\r\n                headers: { 'Authorization': `Bearer ${TOKEN}` }\r\n            })\r\n\r\n            const customerFolders = await request.json();\r\n\r\n            let typeFolder = {\r\n                exists: false,\r\n                folder: null\r\n            }\r\n\r\n            customerFolders.value.forEach(folder => {\r\n                if(folder.name.toLowerCase() == type.toLowerCase()) {\r\n                    typeFolder.exists = true;\r\n                    typeFolder.folder = folder;\r\n                }\r\n            })\r\n\r\n            // If type folder exists\r\n            if(typeFolder.exists == true) {\r\n                // Check if the file already exists\r\n                this.sendFile(file, typeFolder.folder.id);\r\n                // const client = Client.initWithMiddleware({ authProvider, debugLogging: true })\r\n                // client.api('https://graph.microsoft.com/v1.0/me/drive/items/99FEECE9E308A0D9!102/content').get().then(response => console.log(response));\r\n\r\n                // fetch('https://graph.microsoft.com/v1.0/me/drive/items/99FEECE9E308A0D9!105:/INFO CLIENZA 2.txt:/content', {\r\n                //     method: 'PUT',\r\n                //     headers: { 'Authorization': `Bearer ${TOKEN}` },\r\n                //     body: \"saldjsalkdjaksdj\"\r\n                // }).then(response => console.log(response.url))\r\n\r\n                // console.log(s)\r\n\r\n            } else {\r\n                await this.createFolder(type, customerInfo.customer.id);\r\n                this.sendDocument({customer, type, file});\r\n            }\r\n\r\n            return typeFolder;\r\n        }\r\n        // If customer doesnt exists\r\n        else {\r\n            const id = await this.getRootFolderId('customers');\r\n            this.createFolder(customer, id);\r\n            this.sendDocument({customer, type, file});\r\n            return;\r\n        }\r\n    }\r\n\r\n    static async generateProfileFolder() {\r\n        const NAME = \"Profile\";\r\n\r\n        const doesExists = await this.checkOnRootFolder(NAME);\r\n\r\n        if(!doesExists) {\r\n            const clienzaId = await this.getClienzaId();\r\n            await this.createFolder(NAME, clienzaId);\r\n        }\r\n\r\n        const folderId = await this.getRootFolderId(NAME.toLowerCase());\r\n\r\n        return folderId;\r\n    }\r\n\r\n    static async setProfilePic() {\r\n        // Generating profile folder id\r\n        // const PROFILE_FOLDER_ID = await this.generateProfileFolder();\r\n        console.log(await this.getProfilePic(JSON.parse(localStorage.getItem('user')).id));\r\n        // Deleting old pic if exists\r\n\r\n\r\n        // Delete if it does\r\n\r\n\r\n        // Add the new pic\r\n    }\r\n\r\n    static async getProfilePic(user_id) {\r\n        // Check if this user has a profile pic\r\n        await this.generateProfileFolder();\r\n\r\n        const PROFILES = await this.getInfo(\"Profile\");\r\n\r\n        let PROFILE_PIC = null;\r\n\r\n        PROFILES.forEach((pic) => {\r\n            const gettingId  = pic.title.split(\" \");\r\n            const pic_user_id = gettingId[gettingId.length - 1];\r\n\r\n            if(pic_user_id == user_id) {\r\n                PROFILE_PIC = pic;\r\n            }\r\n        });\r\n\r\n        // Return false if image doesnt exists\r\n        if(PROFILE_PIC == null) return false;\r\n\r\n        // Return the image props if true\r\n        return PROFILE_PIC;\r\n    }\r\n\r\n    static async sendFile(file, location, customFileName = null){\r\n        const url = `https://graph.microsoft.com/v1.0/me/drive/items/${location}:/${customFileName != null ? customFileName : file.name}:/content`;\r\n\r\n        const form = new FormData();\r\n        form.append('file', file)\r\n\r\n        fetch(url, {\r\n                method: 'PUT',\r\n                headers: { 'Authorization': `Bearer ${TOKEN}`,\"Content-Type\": \"multipart/form-data\" },\r\n                body: file\r\n            }).then(response => console.log(response.url))\r\n\r\n        console.log(url)\r\n    }\r\n\r\n    static async getCustomerDownloadFileLink(customer_id, type = 'applications', onlyDownloadLink = true){\r\n        const { customer } = await this.checkCustomerSpace(customer_id, true);\r\n\r\n        const applicationsIdrequest = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${customer.id}/children`, {\r\n            method: 'get',\r\n            headers: { 'Authorization': `Bearer ${TOKEN}` },\r\n        });\r\n\r\n        const applicationsId = await applicationsIdrequest.json();\r\n        const filteredId = applicationsId.value.filter(it => it.name.toLowerCase() == type);\r\n\r\n        console.log('aa', filteredId);\r\n\r\n        const files = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${filteredId[0].id}/children`, {\r\n            method: 'get',\r\n            headers: { 'Authorization': `Bearer ${TOKEN}` },\r\n        });\r\n\r\n        const filesResponse = await files.json();\r\n        if(onlyDownloadLink == false) {\r\n            return filesResponse.value;\r\n        }\r\n        \r\n        return filesResponse.value[0]['@microsoft.graph.downloadUrl'];\r\n    }\r\n\r\n    static async getOtherApplications(customer_id) {\r\n        const otherApplications = await this.getCustomerDownloadFileLink(customer_id, \"other applications\", false);\r\n\r\n        console.log('sss', otherApplications.value);\r\n        console.log(customer_id);\r\n    }\r\n\r\n    static async checkOnRootFolder(folderToCheck) {\r\n        const clienzaDirectory = await this.getClienzaRoot();\r\n        let folderExists = false;\r\n        \r\n        clienzaDirectory.value.forEach(cd => {\r\n            if(cd.name.toLowerCase() == folderToCheck.toLowerCase()) {\r\n                folderExists = true;\r\n            }\r\n        })\r\n\r\n        return folderExists;\r\n    }\r\n\r\n    // Help\r\n    static async addInfo({title, file, type = 'Help'}) {\r\n        const clienzaDirectory = await this.getClienzaRoot();\r\n        let helpExists = false;\r\n        \r\n        clienzaDirectory.value.forEach(cd => {\r\n            if(cd.name.toLowerCase() == type.toLowerCase()) {\r\n                helpExists = true;\r\n            }\r\n        })\r\n\r\n        if(!helpExists) {\r\n            const clienzaId = await this.getClienzaId();\r\n            await this.createFolder(type, clienzaId);\r\n        }\r\n\r\n        const helpFolderId = await this.getRootFolderId(type.toLowerCase());\r\n\r\n        const fileExt = file.name.split('.').pop();\r\n        const customFileName = `${title}.${fileExt}`;\r\n\r\n        await this.sendFile(file, helpFolderId, customFileName);\r\n\r\n        return customFileName;\r\n    }\r\n\r\n    static async getInfo(type = 'Help') {\r\n        let id = await this.getRootFolderId(type.toLowerCase());\r\n\r\n        if(id == null) {\r\n            const clienzaId = await this.getClienzaId();\r\n            await this.createFolder(type, clienzaId);\r\n        }\r\n\r\n        id = await this.getRootFolderId(type.toLowerCase());\r\n\r\n        const request = await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${id}/children`, { method: \"GET\", 'headers': {\r\n            'Authorization': `Bearer ${TOKEN}`\r\n        }});\r\n\r\n        const response = await request.json();\r\n\r\n        let files = [];\r\n\r\n        response.value.forEach(help => {\r\n            let title = help.name.split('.');\r\n            title.pop();\r\n            title = title.toString().replace(',', '');\r\n            \r\n            const params = {\r\n                id: help.id,\r\n                title,\r\n                url: help.webUrl,\r\n                downloadUrl: help['@microsoft.graph.downloadUrl']\r\n            }\r\n\r\n            files = [...files, params];\r\n        });\r\n\r\n        return files;\r\n    }\r\n\r\n    static async deleteInfo(item_id) {\r\n        await fetch(`https://graph.microsoft.com/v1.0/me/drive/items/${item_id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Authorization': `Bearer ${TOKEN}`\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default MGraph;"],"names":["staticClass","staticStyle","_c","directives","name","value","_vm","state","attrs","require","scopedSlots","fn","on","exitApp","_v","translate","staticRenderFns","methods","word","wordIndex","LANGUAGE","lng","index","english","toLowerCase","$store","language","german","goToProfile","$router","push","localStorage","removeItem","component","render","TOKEN","MGraph","static","now","Date","start","setFullYear","getFullYear","toDateString","end","request","fetch","method","headers","response","json","params","body","JSON","stringify","error","console","log","this","getItems","clienzaId","forEach","item","id","folderName","getClienzaId","folderId","v","location","driveItem","customersFolder","getRootFolderId","customer","no_id","allCustomers","getCustomers","existence","exists","cust","split","length","type","file","customerInfo","checkCustomerSpace","customerFolders","typeFolder","folder","sendFile","createFolder","sendDocument","NAME","doesExists","checkOnRootFolder","getProfilePic","parse","getItem","user_id","generateProfileFolder","PROFILES","getInfo","PROFILE_PIC","pic","gettingId","title","pic_user_id","customFileName","url","form","FormData","append","then","customer_id","onlyDownloadLink","applicationsIdrequest","applicationsId","filteredId","filter","it","files","filesResponse","otherApplications","getCustomerDownloadFileLink","folderToCheck","clienzaDirectory","getClienzaRoot","folderExists","cd","helpExists","helpFolderId","fileExt","pop","help","toString","replace","webUrl","downloadUrl","item_id"],"sourceRoot":""}